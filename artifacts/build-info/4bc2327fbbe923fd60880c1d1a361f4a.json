{
	"id": "4bc2327fbbe923fd60880c1d1a361f4a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"wallet.sol": {
				"content": "pragma solidity 0.8.26;\r\n\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {Icharity} from \"./Icharity.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    Icharity public immutable charity;\r\n\r\n   uint256 public constant CHARITY_PERCENTAGE = 50; //5.0%\r\n\r\n   error NotEnoughDeposit();\r\n   error NotEnoughMoney();\r\n   error TransferFailed();\r\n\r\n\r\n    constructor(address charityAddress) Ownable(msg.sender){\r\n        charity = Icharity(charityAddress);\r\n    }\r\n\r\n    function deposit() external payable {\r\n        if(msg.value == 0)\r\n        {\r\n            revert NotEnoughDeposit();\r\n        }\r\n        uint256 charityAmount = (msg.value * CHARITY_PERCENTAGE)/1000;\r\n        charity.donate{value:charityAmount}();\r\n    }\r\n\r\n    function withdraw (uint256 amount) external onlyOwner{\r\n        if(amount > address(this).balance) revert NotEnoughMoney();\r\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\r\n            if (!success) revert TransferFailed();\r\n    }\r\n\r\n}"
			},
			"Icharity.sol": {
				"content": "pragma solidity 0.8.26;\r\n\r\ninterface Icharity {\r\n    \r\n\r\n    function donate() external payable;\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Icharity.sol": {
				"Icharity": {
					"abi": [
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"donate()": "ed88c68e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Icharity.sol\":\"Icharity\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Icharity.sol\":{\"keccak256\":\"0x8d560ed34aef4b987bb60b3fbdfb82ac0db81e8faec21e7c4459c187892cef76\",\"urls\":[\"bzz-raw://3ba14d134b1ce1de2a93ab89b9facddfcbcf395e8de9fb20120c96fca87accdb\",\"dweb:/ipfs/QmaZ2hYRT6rkMqh6PMb17yBUNtcdUsEpdCc6EtCXHukzUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wallet.sol": {
				"Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "charityAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NotEnoughDeposit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughMoney",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CHARITY_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "charity",
							"outputs": [
								{
									"internalType": "contract Icharity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"wallet.sol\":140:1006  contract Wallet is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"wallet.sol\":368:476  constructor(address charityAddress) Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"wallet.sol\":412:422  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"wallet.sol\":453:467  charityAddress */\n  dup1\n    /* \"wallet.sol\":434:468  charity = Icharity(charityAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"wallet.sol\":368:476  constructor(address charityAddress) Ownable(msg.sender){... */\n  pop\n    /* \"wallet.sol\":140:1006  contract Wallet is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"wallet.sol\":140:1006  contract Wallet is Ownable {... */\ntag_13:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb82689a7170af4bc238cea9f5ed91ccb0509ae7759ce9b8df7ae215c4191abd7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"wallet.sol\":140:1006  contract Wallet is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x934aa023\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f0d1b2a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"wallet.sol\":746:1001  function withdraw (uint256 amount) external onlyOwner{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"wallet.sol\":215:262  uint256 public constant CHARITY_PERCENTAGE = 50 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wallet.sol\":174:207  Icharity public immutable charity */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wallet.sol\":484:738  function deposit() external payable {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"wallet.sol\":746:1001  function withdraw (uint256 amount) external onlyOwner{... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_41:\n        /* \"wallet.sol\":822:843  address(this).balance */\n      selfbalance\n        /* \"wallet.sol\":813:819  amount */\n      dup2\n        /* \"wallet.sol\":813:843  amount > address(this).balance */\n      gt\n        /* \"wallet.sol\":810:868  if(amount > address(this).balance) revert NotEnoughMoney() */\n      iszero\n      tag_44\n      jumpi\n        /* \"wallet.sol\":852:868  NotEnoughMoney() */\n      mload(0x40)\n      0xd721fcb200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"wallet.sol\":810:868  if(amount > address(this).balance) revert NotEnoughMoney() */\n    tag_44:\n        /* \"wallet.sol\":880:892  bool success */\n      0x00\n        /* \"wallet.sol\":906:916  msg.sender */\n      caller\n        /* \"wallet.sol\":898:922  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wallet.sol\":930:936  amount */\n      dup3\n        /* \"wallet.sol\":898:941  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_49\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_48)\n    tag_49:\n      0x60\n      swap2\n      pop\n    tag_48:\n      pop\n        /* \"wallet.sol\":879:941  (bool success, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"wallet.sol\":961:968  success */\n      dup1\n        /* \"wallet.sol\":956:993  if (!success) revert TransferFailed() */\n      tag_50\n      jumpi\n        /* \"wallet.sol\":977:993  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"wallet.sol\":956:993  if (!success) revert TransferFailed() */\n    tag_50:\n        /* \"wallet.sol\":799:1001  {... */\n      pop\n        /* \"wallet.sol\":746:1001  function withdraw (uint256 amount) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"wallet.sol\":215:262  uint256 public constant CHARITY_PERCENTAGE = 50 */\n    tag_17:\n        /* \"wallet.sol\":260:262  50 */\n      0x32\n        /* \"wallet.sol\":215:262  uint256 public constant CHARITY_PERCENTAGE = 50 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"wallet.sol\":174:207  Icharity public immutable charity */\n    tag_30:\n      immutable(\"0xb82689a7170af4bc238cea9f5ed91ccb0509ae7759ce9b8df7ae215c4191abd7\")\n      dup2\n      jump\t// out\n        /* \"wallet.sol\":484:738  function deposit() external payable {... */\n    tag_34:\n        /* \"wallet.sol\":547:548  0 */\n      0x00\n        /* \"wallet.sol\":534:543  msg.value */\n      callvalue\n        /* \"wallet.sol\":534:548  msg.value == 0 */\n      sub\n        /* \"wallet.sol\":531:611  if(msg.value == 0)... */\n      tag_58\n      jumpi\n        /* \"wallet.sol\":581:599  NotEnoughDeposit() */\n      mload(0x40)\n      0x652c9e7a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"wallet.sol\":531:611  if(msg.value == 0)... */\n    tag_58:\n        /* \"wallet.sol\":621:642  uint256 charityAmount */\n      0x00\n        /* \"wallet.sol\":678:682  1000 */\n      0x03e8\n        /* \"wallet.sol\":260:262  50 */\n      0x32\n        /* \"wallet.sol\":646:655  msg.value */\n      callvalue\n        /* \"wallet.sol\":646:676  msg.value * CHARITY_PERCENTAGE */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"wallet.sol\":645:682  (msg.value * CHARITY_PERCENTAGE)/1000 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"wallet.sol\":621:682  uint256 charityAmount = (msg.value * CHARITY_PERCENTAGE)/1000 */\n      swap1\n      pop\n        /* \"wallet.sol\":693:700  charity */\n      immutable(\"0xb82689a7170af4bc238cea9f5ed91ccb0509ae7759ce9b8df7ae215c4191abd7\")\n        /* \"wallet.sol\":693:707  charity.donate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed88c68e\n        /* \"wallet.sol\":714:727  charityAmount */\n      dup3\n        /* \"wallet.sol\":693:730  charity.donate{value:charityAmount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"wallet.sol\":520:738  {... */\n      pop\n        /* \"wallet.sol\":484:738  function deposit() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_69\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_76\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_82:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_84:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_85:\n        /* \"#utility.yul\":490:514   */\n      tag_109\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_84\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_110:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_86:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_112\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_85\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_115\n      tag_82\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":766:885   */\n    tag_114:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_116\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_86\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_87:\n        /* \"#utility.yul\":1112:1136   */\n      tag_118\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_84\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_19:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_120\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_87\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_88:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_89:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_123\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_88\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_90:\n        /* \"#utility.yul\":1698:1722   */\n      tag_125\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_89\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_27:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_127\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_90\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2023   */\n    tag_91:\n        /* \"#utility.yul\":1991:1994   */\n      0x00\n        /* \"#utility.yul\":2012:2017   */\n      dup2\n        /* \"#utility.yul\":2005:2017   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2171   */\n    tag_92:\n        /* \"#utility.yul\":2079:2088   */\n      0x00\n        /* \"#utility.yul\":2112:2165   */\n      tag_130\n        /* \"#utility.yul\":2130:2164   */\n      tag_131\n        /* \"#utility.yul\":2139:2163   */\n      tag_132\n        /* \"#utility.yul\":2157:2162   */\n      dup5\n        /* \"#utility.yul\":2139:2163   */\n      tag_88\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2130:2164   */\n      tag_91\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2112:2165   */\n      tag_88\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2099:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2177:2303   */\n    tag_93:\n        /* \"#utility.yul\":2227:2236   */\n      0x00\n        /* \"#utility.yul\":2260:2297   */\n      tag_134\n        /* \"#utility.yul\":2291:2296   */\n      dup3\n        /* \"#utility.yul\":2260:2297   */\n      tag_92\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2247:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2177:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2451   */\n    tag_94:\n        /* \"#utility.yul\":2375:2384   */\n      0x00\n        /* \"#utility.yul\":2408:2445   */\n      tag_136\n        /* \"#utility.yul\":2439:2444   */\n      dup3\n        /* \"#utility.yul\":2408:2445   */\n      tag_93\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2395:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2457:2620   */\n    tag_95:\n        /* \"#utility.yul\":2560:2613   */\n      tag_138\n        /* \"#utility.yul\":2607:2612   */\n      dup2\n        /* \"#utility.yul\":2560:2613   */\n      tag_94\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2555:2558   */\n      dup3\n        /* \"#utility.yul\":2548:2614   */\n      mstore\n        /* \"#utility.yul\":2457:2620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2626:2880   */\n    tag_32:\n        /* \"#utility.yul\":2735:2739   */\n      0x00\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2762:2771   */\n      dup3\n        /* \"#utility.yul\":2758:2776   */\n      add\n        /* \"#utility.yul\":2750:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2873   */\n      tag_140\n        /* \"#utility.yul\":2870:2871   */\n      0x00\n        /* \"#utility.yul\":2859:2868   */\n      dup4\n        /* \"#utility.yul\":2855:2872   */\n      add\n        /* \"#utility.yul\":2846:2852   */\n      dup5\n        /* \"#utility.yul\":2786:2873   */\n      tag_95\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2626:2880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3008   */\n    tag_96:\n        /* \"#utility.yul\":2959:2983   */\n      tag_142\n        /* \"#utility.yul\":2977:2982   */\n      dup2\n        /* \"#utility.yul\":2959:2983   */\n      tag_89\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2952:2957   */\n      dup2\n        /* \"#utility.yul\":2949:2984   */\n      eq\n        /* \"#utility.yul\":2939:3002   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2995:2996   */\n      dup1\n        /* \"#utility.yul\":2988:3000   */\n      revert\n        /* \"#utility.yul\":2939:3002   */\n    tag_143:\n        /* \"#utility.yul\":2886:3008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3014:3153   */\n    tag_97:\n        /* \"#utility.yul\":3060:3065   */\n      0x00\n        /* \"#utility.yul\":3098:3104   */\n      dup2\n        /* \"#utility.yul\":3085:3105   */\n      calldataload\n        /* \"#utility.yul\":3076:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3114:3147   */\n      tag_145\n        /* \"#utility.yul\":3141:3146   */\n      dup2\n        /* \"#utility.yul\":3114:3147   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3014:3153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3488   */\n    tag_38:\n        /* \"#utility.yul\":3218:3224   */\n      0x00\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup3\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3242:3265   */\n      sub\n        /* \"#utility.yul\":3238:3270   */\n      slt\n        /* \"#utility.yul\":3235:3354   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":3273:3352   */\n      tag_148\n      tag_82\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3235:3354   */\n    tag_147:\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3418:3471   */\n      tag_149\n        /* \"#utility.yul\":3463:3470   */\n      dup5\n        /* \"#utility.yul\":3454:3460   */\n      dup3\n        /* \"#utility.yul\":3443:3452   */\n      dup6\n        /* \"#utility.yul\":3439:3461   */\n      add\n        /* \"#utility.yul\":3418:3471   */\n      tag_97\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3408:3471   */\n      swap2\n      pop\n        /* \"#utility.yul\":3364:3481   */\n      pop\n        /* \"#utility.yul\":3159:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3641   */\n    tag_98:\n        /* \"#utility.yul\":3595:3606   */\n      0x00\n        /* \"#utility.yul\":3632:3635   */\n      dup2\n        /* \"#utility.yul\":3617:3635   */\n      swap1\n      pop\n        /* \"#utility.yul\":3494:3641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:3761   */\n    tag_99:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3767:4165   */\n    tag_100:\n        /* \"#utility.yul\":3926:3929   */\n      0x00\n        /* \"#utility.yul\":3947:4030   */\n      tag_153\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4023:4026   */\n      dup4\n        /* \"#utility.yul\":3947:4030   */\n      tag_98\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3940:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":4039:4132   */\n      tag_154\n        /* \"#utility.yul\":4128:4131   */\n      dup3\n        /* \"#utility.yul\":4039:4132   */\n      tag_99\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4152:4155   */\n      dup3\n        /* \"#utility.yul\":4148:4159   */\n      add\n        /* \"#utility.yul\":4141:4159   */\n      swap1\n      pop\n        /* \"#utility.yul\":3767:4165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4550   */\n    tag_46:\n        /* \"#utility.yul\":4355:4358   */\n      0x00\n        /* \"#utility.yul\":4377:4524   */\n      tag_156\n        /* \"#utility.yul\":4520:4523   */\n      dup3\n        /* \"#utility.yul\":4377:4524   */\n      tag_100\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4370:4524   */\n      swap2\n      pop\n        /* \"#utility.yul\":4541:4544   */\n      dup2\n        /* \"#utility.yul\":4534:4544   */\n      swap1\n      pop\n        /* \"#utility.yul\":4171:4550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4556:4736   */\n    tag_101:\n        /* \"#utility.yul\":4604:4681   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4601:4602   */\n      0x00\n        /* \"#utility.yul\":4594:4682   */\n      mstore\n        /* \"#utility.yul\":4701:4705   */\n      0x11\n        /* \"#utility.yul\":4698:4699   */\n      0x04\n        /* \"#utility.yul\":4691:4706   */\n      mstore\n        /* \"#utility.yul\":4725:4729   */\n      0x24\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4715:4730   */\n      revert\n        /* \"#utility.yul\":4742:5152   */\n    tag_60:\n        /* \"#utility.yul\":4782:4789   */\n      0x00\n        /* \"#utility.yul\":4805:4825   */\n      tag_159\n        /* \"#utility.yul\":4823:4824   */\n      dup3\n        /* \"#utility.yul\":4805:4825   */\n      tag_84\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4800:4825   */\n      swap2\n      pop\n        /* \"#utility.yul\":4839:4859   */\n      tag_160\n        /* \"#utility.yul\":4857:4858   */\n      dup4\n        /* \"#utility.yul\":4839:4859   */\n      tag_84\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4834:4859   */\n      swap3\n      pop\n        /* \"#utility.yul\":4894:4895   */\n      dup3\n        /* \"#utility.yul\":4891:4892   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      mul\n        /* \"#utility.yul\":4916:4946   */\n      tag_161\n        /* \"#utility.yul\":4934:4945   */\n      dup2\n        /* \"#utility.yul\":4916:4946   */\n      tag_84\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4905:4946   */\n      swap2\n      pop\n        /* \"#utility.yul\":5095:5096   */\n      dup3\n        /* \"#utility.yul\":5086:5093   */\n      dup3\n        /* \"#utility.yul\":5082:5097   */\n      div\n        /* \"#utility.yul\":5079:5080   */\n      dup5\n        /* \"#utility.yul\":5076:5098   */\n      eq\n        /* \"#utility.yul\":5056:5057   */\n      dup4\n        /* \"#utility.yul\":5049:5058   */\n      iszero\n        /* \"#utility.yul\":5029:5112   */\n      or\n        /* \"#utility.yul\":5006:5145   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5125:5143   */\n      tag_163\n      tag_101\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5006:5145   */\n    tag_162:\n        /* \"#utility.yul\":4790:5152   */\n      pop\n        /* \"#utility.yul\":4742:5152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5158:5338   */\n    tag_102:\n        /* \"#utility.yul\":5206:5283   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5203:5204   */\n      0x00\n        /* \"#utility.yul\":5196:5284   */\n      mstore\n        /* \"#utility.yul\":5303:5307   */\n      0x12\n        /* \"#utility.yul\":5300:5301   */\n      0x04\n        /* \"#utility.yul\":5293:5308   */\n      mstore\n        /* \"#utility.yul\":5327:5331   */\n      0x24\n        /* \"#utility.yul\":5324:5325   */\n      0x00\n        /* \"#utility.yul\":5317:5332   */\n      revert\n        /* \"#utility.yul\":5344:5529   */\n    tag_62:\n        /* \"#utility.yul\":5384:5385   */\n      0x00\n        /* \"#utility.yul\":5401:5421   */\n      tag_166\n        /* \"#utility.yul\":5419:5420   */\n      dup3\n        /* \"#utility.yul\":5401:5421   */\n      tag_84\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5396:5421   */\n      swap2\n      pop\n        /* \"#utility.yul\":5435:5455   */\n      tag_167\n        /* \"#utility.yul\":5453:5454   */\n      dup4\n        /* \"#utility.yul\":5435:5455   */\n      tag_84\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5430:5455   */\n      swap3\n      pop\n        /* \"#utility.yul\":5474:5475   */\n      dup3\n        /* \"#utility.yul\":5464:5499   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":5479:5497   */\n      tag_169\n      tag_102\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5464:5499   */\n    tag_168:\n        /* \"#utility.yul\":5521:5522   */\n      dup3\n        /* \"#utility.yul\":5518:5519   */\n      dup3\n        /* \"#utility.yul\":5514:5523   */\n      div\n        /* \"#utility.yul\":5509:5523   */\n      swap1\n      pop\n        /* \"#utility.yul\":5344:5529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207422dadf5f85edc0a5610f157a5cdd15976b13aa8475a020edde78579c1f5beb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 236,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:4",
										"nodeType": "YulBlock",
										"src": "0:1551:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610abc380380610abc8339818101604052810190610031919061020b565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610245565b60405180910390fd5b6100b1816100ec60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061025e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101da826101b1565b9050919050565b6101ea816101d0565b81146101f4575f80fd5b50565b5f81519050610205816101e1565b92915050565b5f602082840312156102205761021f6101ad565b5b5f61022d848285016101f7565b91505092915050565b61023f816101d0565b82525050565b5f6020820190506102585f830184610236565b92915050565b60805161083f61027d5f395f81816102870152610301015261083f5ff3fe60806040526004361061006f575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100db578063934aa02314610105578063d0e30db01461012f578063f2fde38b146101395761006f565b80632e1a7d4d146100735780634f0d1b2a1461009b578063715018a6146100c5575b5f80fd5b34801561007e575f80fd5b5061009960048036038101906100949190610589565b610161565b005b3480156100a6575f80fd5b506100af610246565b6040516100bc91906105c3565b60405180910390f35b3480156100d0575f80fd5b506100d961024b565b005b3480156100e6575f80fd5b506100ef61025e565b6040516100fc919061061b565b60405180910390f35b348015610110575f80fd5b50610119610285565b604051610126919061068f565b60405180910390f35b6101376102a9565b005b348015610144575f80fd5b5061015f600480360381019061015a91906106d2565b61037f565b005b610169610403565b478111156101a3576040517fd721fcb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516101c89061072a565b5f6040518083038185875af1925050503d805f8114610202576040519150601f19603f3d011682016040523d82523d5f602084013e610207565b606091505b5050905080610242576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b603281565b610253610403565b61025c5f61048a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f34036102e2576040517f652c9e7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103e86032346102f3919061076b565b6102fd91906107d9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ed88c68e826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610365575f80fd5b505af1158015610377573d5f803e3d5ffd5b505050505050565b610387610403565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103ee919061061b565b60405180910390fd5b6104008161048a565b50565b61040b61054b565b73ffffffffffffffffffffffffffffffffffffffff1661042961025e565b73ffffffffffffffffffffffffffffffffffffffff16146104885761044c61054b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161047f919061061b565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61056881610556565b8114610572575f80fd5b50565b5f813590506105838161055f565b92915050565b5f6020828403121561059e5761059d610552565b5b5f6105ab84828501610575565b91505092915050565b6105bd81610556565b82525050565b5f6020820190506105d65f8301846105b4565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610605826105dc565b9050919050565b610615816105fb565b82525050565b5f60208201905061062e5f83018461060c565b92915050565b5f819050919050565b5f61065761065261064d846105dc565b610634565b6105dc565b9050919050565b5f6106688261063d565b9050919050565b5f6106798261065e565b9050919050565b6106898161066f565b82525050565b5f6020820190506106a25f830184610680565b92915050565b6106b1816105fb565b81146106bb575f80fd5b50565b5f813590506106cc816106a8565b92915050565b5f602082840312156106e7576106e6610552565b5b5f6106f4848285016106be565b91505092915050565b5f81905092915050565b50565b5f6107155f836106fd565b915061072082610707565b5f82019050919050565b5f6107348261070a565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61077582610556565b915061078083610556565b925082820261078e81610556565b915082820484148315176107a5576107a461073e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6107e382610556565b91506107ee83610556565b9250826107fe576107fd6107ac565b5b82820490509291505056fea26469706673582212207422dadf5f85edc0a5610f157a5cdd15976b13aa8475a020edde78579c1f5beb64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xABC CODESIZE SUB DUP1 PUSH2 0xABC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xEC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x25E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA DUP3 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x1D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x205 DUP2 PUSH2 0x1E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220 JUMPI PUSH2 0x21F PUSH2 0x1AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D DUP5 DUP3 DUP6 ADD PUSH2 0x1F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x1D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258 PUSH0 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x83F PUSH2 0x27D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x287 ADD MSTORE PUSH2 0x301 ADD MSTORE PUSH2 0x83F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x139 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x4F0D1B2A EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x24B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x403 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD721FCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x207 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x253 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x25C PUSH0 PUSH2 0x48A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x652C9E7A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x32 CALLVALUE PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED88C68E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x387 PUSH2 0x403 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x400 DUP2 PUSH2 0x48A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x40B PUSH2 0x54B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x429 PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x488 JUMPI PUSH2 0x44C PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x556 JUMP JUMPDEST DUP2 EQ PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x583 DUP2 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x552 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5AB DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x556 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x605 DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62E PUSH0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x657 PUSH2 0x652 PUSH2 0x64D DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x668 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x679 DUP3 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x689 DUP2 PUSH2 0x66F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B1 DUP2 PUSH2 0x5FB JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6CC DUP2 PUSH2 0x6A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH2 0x552 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6F4 DUP5 DUP3 DUP6 ADD PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x715 PUSH0 DUP4 PUSH2 0x6FD JUMP JUMPDEST SWAP2 POP PUSH2 0x720 DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x734 DUP3 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x775 DUP3 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP PUSH2 0x780 DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x78E DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x73E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7E3 DUP3 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EE DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x7AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x22DADF5F85EDC0A5610F157A5CDD15976B13AA8475 LOG0 KECCAK256 0xED 0xDE PUSH25 0x579C1F5BEB64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "140:866:3:-:0;;;368:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;412:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;453:14:3::1;434:34;;;;;;;;::::0;::::1;368:108:::0;140:866;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;140:866:3:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CHARITY_PERCENTAGE_197": {
									"entryPoint": 582,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1027,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1355,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1162,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@charity_194": {
									"entryPoint": 645,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_249": {
									"entryPoint": 681,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 606,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 587,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 895,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_287": {
									"entryPoint": 353,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Icharity_$183_to_t_address_fromStack": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Icharity_$183__to_t_address__fromStack_reversed": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Icharity_$183_to_t_address": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5532:4",
										"nodeType": "YulBlock",
										"src": "0:5532:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "597:87:4",
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nativeSrc": "607:29:4",
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nativeSrc": "616:20:4",
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nativeSrc": "645:33:4",
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nativeSrc": "645:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:4",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:4",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:4",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nativeSrc": "756:263:4",
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:4",
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nativeSrc": "804:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nativeSrc": "804:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nativeSrc": "773:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nativeSrc": "769:32:4",
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nativeSrc": "766:119:4",
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nativeSrc": "895:117:4",
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nativeSrc": "910:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:4",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:4",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:4",
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nativeSrc": "970:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nativeSrc": "949:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:4",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:4",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:4",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nativeSrc": "1090:53:4",
													"nodeType": "YulBlock",
													"src": "1090:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:4"
																		},
																		"nativeSrc": "1112:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:4"
																},
																"nativeSrc": "1100:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:4"
															},
															"nativeSrc": "1100:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:4",
														"nodeType": "YulTypedName",
														"src": "1078:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:4",
														"nodeType": "YulTypedName",
														"src": "1085:3:4",
														"type": ""
													}
												],
												"src": "1025:118:4"
											},
											{
												"body": {
													"nativeSrc": "1247:124:4",
													"nodeType": "YulBlock",
													"src": "1247:124:4",
													"statements": [
														{
															"nativeSrc": "1257:26:4",
															"nodeType": "YulAssignment",
															"src": "1257:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:4"
																},
																"nativeSrc": "1265:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:4"
																		},
																		"nativeSrc": "1346:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:4"
																},
																"nativeSrc": "1293:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:4"
															},
															"nativeSrc": "1293:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:4",
														"nodeType": "YulTypedName",
														"src": "1219:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:4",
														"nodeType": "YulTypedName",
														"src": "1231:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:4",
														"nodeType": "YulTypedName",
														"src": "1242:4:4",
														"type": ""
													}
												],
												"src": "1149:222:4"
											},
											{
												"body": {
													"nativeSrc": "1422:81:4",
													"nodeType": "YulBlock",
													"src": "1422:81:4",
													"statements": [
														{
															"nativeSrc": "1432:65:4",
															"nodeType": "YulAssignment",
															"src": "1432:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:4"
																},
																"nativeSrc": "1443:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:4",
														"nodeType": "YulTypedName",
														"src": "1404:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:4",
														"nodeType": "YulTypedName",
														"src": "1414:7:4",
														"type": ""
													}
												],
												"src": "1377:126:4"
											},
											{
												"body": {
													"nativeSrc": "1554:51:4",
													"nodeType": "YulBlock",
													"src": "1554:51:4",
													"statements": [
														{
															"nativeSrc": "1564:35:4",
															"nodeType": "YulAssignment",
															"src": "1564:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:4"
																},
																"nativeSrc": "1575:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:4",
														"nodeType": "YulTypedName",
														"src": "1536:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:4",
														"nodeType": "YulTypedName",
														"src": "1546:7:4",
														"type": ""
													}
												],
												"src": "1509:96:4"
											},
											{
												"body": {
													"nativeSrc": "1676:53:4",
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nativeSrc": "1698:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nativeSrc": "1686:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nativeSrc": "1686:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:4",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:4",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nativeSrc": "1833:124:4",
													"nodeType": "YulBlock",
													"src": "1833:124:4",
													"statements": [
														{
															"nativeSrc": "1843:26:4",
															"nodeType": "YulAssignment",
															"src": "1843:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:4"
																},
																"nativeSrc": "1851:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:4"
																		},
																		"nativeSrc": "1932:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:4"
																},
																"nativeSrc": "1879:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:4"
															},
															"nativeSrc": "1879:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:4",
														"nodeType": "YulTypedName",
														"src": "1805:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:4",
														"nodeType": "YulTypedName",
														"src": "1817:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:4",
														"nodeType": "YulTypedName",
														"src": "1828:4:4",
														"type": ""
													}
												],
												"src": "1735:222:4"
											},
											{
												"body": {
													"nativeSrc": "1995:28:4",
													"nodeType": "YulBlock",
													"src": "1995:28:4",
													"statements": [
														{
															"nativeSrc": "2005:12:4",
															"nodeType": "YulAssignment",
															"src": "2005:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "2012:5:4",
																"nodeType": "YulIdentifier",
																"src": "2012:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2005:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2005:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1963:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1981:5:4",
														"nodeType": "YulTypedName",
														"src": "1981:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1991:3:4",
														"nodeType": "YulTypedName",
														"src": "1991:3:4",
														"type": ""
													}
												],
												"src": "1963:60:4"
											},
											{
												"body": {
													"nativeSrc": "2089:82:4",
													"nodeType": "YulBlock",
													"src": "2089:82:4",
													"statements": [
														{
															"nativeSrc": "2099:66:4",
															"nodeType": "YulAssignment",
															"src": "2099:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2157:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2157:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2139:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2139:17:4"
																				},
																				"nativeSrc": "2139:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2139:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2130:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "2130:8:4"
																		},
																		"nativeSrc": "2130:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2130:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2112:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:4"
																},
																"nativeSrc": "2112:53:4",
																"nodeType": "YulFunctionCall",
																"src": "2112:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2099:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2099:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2029:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2069:5:4",
														"nodeType": "YulTypedName",
														"src": "2069:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2079:9:4",
														"nodeType": "YulTypedName",
														"src": "2079:9:4",
														"type": ""
													}
												],
												"src": "2029:142:4"
											},
											{
												"body": {
													"nativeSrc": "2237:66:4",
													"nodeType": "YulBlock",
													"src": "2237:66:4",
													"statements": [
														{
															"nativeSrc": "2247:50:4",
															"nodeType": "YulAssignment",
															"src": "2247:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2291:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2291:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2260:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2260:30:4"
																},
																"nativeSrc": "2260:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2260:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2247:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2247:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2177:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:4",
														"nodeType": "YulTypedName",
														"src": "2217:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2227:9:4",
														"nodeType": "YulTypedName",
														"src": "2227:9:4",
														"type": ""
													}
												],
												"src": "2177:126:4"
											},
											{
												"body": {
													"nativeSrc": "2385:66:4",
													"nodeType": "YulBlock",
													"src": "2385:66:4",
													"statements": [
														{
															"nativeSrc": "2395:50:4",
															"nodeType": "YulAssignment",
															"src": "2395:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2439:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2439:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2408:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2408:30:4"
																},
																"nativeSrc": "2408:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2408:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2395:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2395:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Icharity_$183_to_t_address",
												"nativeSrc": "2309:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2365:5:4",
														"nodeType": "YulTypedName",
														"src": "2365:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2375:9:4",
														"nodeType": "YulTypedName",
														"src": "2375:9:4",
														"type": ""
													}
												],
												"src": "2309:142:4"
											},
											{
												"body": {
													"nativeSrc": "2538:82:4",
													"nodeType": "YulBlock",
													"src": "2538:82:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2555:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2555:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2607:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2607:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Icharity_$183_to_t_address",
																			"nativeSrc": "2560:46:4",
																			"nodeType": "YulIdentifier",
																			"src": "2560:46:4"
																		},
																		"nativeSrc": "2560:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2560:53:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2548:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2548:6:4"
																},
																"nativeSrc": "2548:66:4",
																"nodeType": "YulFunctionCall",
																"src": "2548:66:4"
															},
															"nativeSrc": "2548:66:4",
															"nodeType": "YulExpressionStatement",
															"src": "2548:66:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_Icharity_$183_to_t_address_fromStack",
												"nativeSrc": "2457:163:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2526:5:4",
														"nodeType": "YulTypedName",
														"src": "2526:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2533:3:4",
														"nodeType": "YulTypedName",
														"src": "2533:3:4",
														"type": ""
													}
												],
												"src": "2457:163:4"
											},
											{
												"body": {
													"nativeSrc": "2740:140:4",
													"nodeType": "YulBlock",
													"src": "2740:140:4",
													"statements": [
														{
															"nativeSrc": "2750:26:4",
															"nodeType": "YulAssignment",
															"src": "2750:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2762:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2762:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:4"
																},
																"nativeSrc": "2758:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2758:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2750:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2750:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2846:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2846:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2859:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2870:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2870:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:4"
																		},
																		"nativeSrc": "2855:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Icharity_$183_to_t_address_fromStack",
																	"nativeSrc": "2786:59:4",
																	"nodeType": "YulIdentifier",
																	"src": "2786:59:4"
																},
																"nativeSrc": "2786:87:4",
																"nodeType": "YulFunctionCall",
																"src": "2786:87:4"
															},
															"nativeSrc": "2786:87:4",
															"nodeType": "YulExpressionStatement",
															"src": "2786:87:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Icharity_$183__to_t_address__fromStack_reversed",
												"nativeSrc": "2626:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2712:9:4",
														"nodeType": "YulTypedName",
														"src": "2712:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2724:6:4",
														"nodeType": "YulTypedName",
														"src": "2724:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2735:4:4",
														"nodeType": "YulTypedName",
														"src": "2735:4:4",
														"type": ""
													}
												],
												"src": "2626:254:4"
											},
											{
												"body": {
													"nativeSrc": "2929:79:4",
													"nodeType": "YulBlock",
													"src": "2929:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2986:16:4",
																"nodeType": "YulBlock",
																"src": "2986:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2995:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2995:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2998:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2988:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2988:6:4"
																			},
																			"nativeSrc": "2988:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:12:4"
																		},
																		"nativeSrc": "2988:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2952:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2952:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2977:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2977:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2959:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2959:17:4"
																				},
																				"nativeSrc": "2959:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2959:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2949:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2949:2:4"
																		},
																		"nativeSrc": "2949:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2949:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2942:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:4"
																},
																"nativeSrc": "2942:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2942:43:4"
															},
															"nativeSrc": "2939:63:4",
															"nodeType": "YulIf",
															"src": "2939:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2886:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2922:5:4",
														"nodeType": "YulTypedName",
														"src": "2922:5:4",
														"type": ""
													}
												],
												"src": "2886:122:4"
											},
											{
												"body": {
													"nativeSrc": "3066:87:4",
													"nodeType": "YulBlock",
													"src": "3066:87:4",
													"statements": [
														{
															"nativeSrc": "3076:29:4",
															"nodeType": "YulAssignment",
															"src": "3076:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3098:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3085:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3085:12:4"
																},
																"nativeSrc": "3085:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3085:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3076:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3076:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3141:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3141:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3114:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3114:26:4"
																},
																"nativeSrc": "3114:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3114:33:4"
															},
															"nativeSrc": "3114:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3114:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3014:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3044:6:4",
														"nodeType": "YulTypedName",
														"src": "3044:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3052:3:4",
														"nodeType": "YulTypedName",
														"src": "3052:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3060:5:4",
														"nodeType": "YulTypedName",
														"src": "3060:5:4",
														"type": ""
													}
												],
												"src": "3014:139:4"
											},
											{
												"body": {
													"nativeSrc": "3225:263:4",
													"nodeType": "YulBlock",
													"src": "3225:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3271:83:4",
																"nodeType": "YulBlock",
																"src": "3271:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3273:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3273:77:4"
																			},
																			"nativeSrc": "3273:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3273:79:4"
																		},
																		"nativeSrc": "3273:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3246:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3255:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3242:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:4"
																		},
																		"nativeSrc": "3242:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3267:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3238:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:4"
																},
																"nativeSrc": "3238:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3238:32:4"
															},
															"nativeSrc": "3235:119:4",
															"nodeType": "YulIf",
															"src": "3235:119:4"
														},
														{
															"nativeSrc": "3364:117:4",
															"nodeType": "YulBlock",
															"src": "3364:117:4",
															"statements": [
																{
																	"nativeSrc": "3379:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3379:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3393:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3393:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3383:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3383:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3408:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3408:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3443:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3443:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3454:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3454:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3439:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3439:3:4"
																				},
																				"nativeSrc": "3439:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3439:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3463:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3463:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3418:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3418:20:4"
																		},
																		"nativeSrc": "3418:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3408:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3408:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3159:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3195:9:4",
														"nodeType": "YulTypedName",
														"src": "3195:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3206:7:4",
														"nodeType": "YulTypedName",
														"src": "3206:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3218:6:4",
														"nodeType": "YulTypedName",
														"src": "3218:6:4",
														"type": ""
													}
												],
												"src": "3159:329:4"
											},
											{
												"body": {
													"nativeSrc": "3607:34:4",
													"nodeType": "YulBlock",
													"src": "3607:34:4",
													"statements": [
														{
															"nativeSrc": "3617:18:4",
															"nodeType": "YulAssignment",
															"src": "3617:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "3632:3:4",
																"nodeType": "YulIdentifier",
																"src": "3632:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3617:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3617:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3494:147:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3579:3:4",
														"nodeType": "YulTypedName",
														"src": "3579:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3584:6:4",
														"nodeType": "YulTypedName",
														"src": "3584:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3595:11:4",
														"nodeType": "YulTypedName",
														"src": "3595:11:4",
														"type": ""
													}
												],
												"src": "3494:147:4"
											},
											{
												"body": {
													"nativeSrc": "3753:8:4",
													"nodeType": "YulBlock",
													"src": "3753:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "3647:114:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3745:6:4",
														"nodeType": "YulTypedName",
														"src": "3745:6:4",
														"type": ""
													}
												],
												"src": "3647:114:4"
											},
											{
												"body": {
													"nativeSrc": "3930:235:4",
													"nodeType": "YulBlock",
													"src": "3930:235:4",
													"statements": [
														{
															"nativeSrc": "3940:90:4",
															"nodeType": "YulAssignment",
															"src": "3940:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4023:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4023:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4028:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3947:75:4",
																	"nodeType": "YulIdentifier",
																	"src": "3947:75:4"
																},
																"nativeSrc": "3947:83:4",
																"nodeType": "YulFunctionCall",
																"src": "3947:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3940:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3940:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4128:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4128:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "4039:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4039:88:4"
																},
																"nativeSrc": "4039:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4039:93:4"
															},
															"nativeSrc": "4039:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4039:93:4"
														},
														{
															"nativeSrc": "4141:18:4",
															"nodeType": "YulAssignment",
															"src": "4141:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4152:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4152:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4157:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4148:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:4"
																},
																"nativeSrc": "4148:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4148:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4141:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3767:398:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3918:3:4",
														"nodeType": "YulTypedName",
														"src": "3918:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3926:3:4",
														"nodeType": "YulTypedName",
														"src": "3926:3:4",
														"type": ""
													}
												],
												"src": "3767:398:4"
											},
											{
												"body": {
													"nativeSrc": "4359:191:4",
													"nodeType": "YulBlock",
													"src": "4359:191:4",
													"statements": [
														{
															"nativeSrc": "4370:154:4",
															"nodeType": "YulAssignment",
															"src": "4370:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4520:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4520:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4377:141:4",
																	"nodeType": "YulIdentifier",
																	"src": "4377:141:4"
																},
																"nativeSrc": "4377:147:4",
																"nodeType": "YulFunctionCall",
																"src": "4377:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4370:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4370:3:4"
																}
															]
														},
														{
															"nativeSrc": "4534:10:4",
															"nodeType": "YulAssignment",
															"src": "4534:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "4541:3:4",
																"nodeType": "YulIdentifier",
																"src": "4541:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4534:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4171:379:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4346:3:4",
														"nodeType": "YulTypedName",
														"src": "4346:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4355:3:4",
														"nodeType": "YulTypedName",
														"src": "4355:3:4",
														"type": ""
													}
												],
												"src": "4171:379:4"
											},
											{
												"body": {
													"nativeSrc": "4584:152:4",
													"nodeType": "YulBlock",
													"src": "4584:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4601:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4601:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4604:77:4",
																		"nodeType": "YulLiteral",
																		"src": "4604:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:4"
																},
																"nativeSrc": "4594:88:4",
																"nodeType": "YulFunctionCall",
																"src": "4594:88:4"
															},
															"nativeSrc": "4594:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "4594:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4698:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4698:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4701:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4701:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4691:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4691:6:4"
																},
																"nativeSrc": "4691:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4691:15:4"
															},
															"nativeSrc": "4691:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4691:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4722:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4722:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4725:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4725:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4715:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:4"
																},
																"nativeSrc": "4715:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4715:15:4"
															},
															"nativeSrc": "4715:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4715:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4556:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "4556:180:4"
											},
											{
												"body": {
													"nativeSrc": "4790:362:4",
													"nodeType": "YulBlock",
													"src": "4790:362:4",
													"statements": [
														{
															"nativeSrc": "4800:25:4",
															"nodeType": "YulAssignment",
															"src": "4800:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4823:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4823:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4805:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4805:17:4"
																},
																"nativeSrc": "4805:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4805:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4800:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4800:1:4"
																}
															]
														},
														{
															"nativeSrc": "4834:25:4",
															"nodeType": "YulAssignment",
															"src": "4834:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4857:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4857:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4839:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4839:17:4"
																},
																"nativeSrc": "4839:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4839:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4834:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4834:1:4"
																}
															]
														},
														{
															"nativeSrc": "4868:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4868:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4891:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4891:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4894:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4894:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4887:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4887:3:4"
																},
																"nativeSrc": "4887:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4887:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4872:11:4",
																	"nodeType": "YulTypedName",
																	"src": "4872:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4905:41:4",
															"nodeType": "YulAssignment",
															"src": "4905:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4934:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "4934:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4916:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4916:17:4"
																},
																"nativeSrc": "4916:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4916:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4905:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4905:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5123:22:4",
																"nodeType": "YulBlock",
																"src": "5123:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5125:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5125:16:4"
																			},
																			"nativeSrc": "5125:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:18:4"
																		},
																		"nativeSrc": "5125:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5056:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "5056:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5049:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "5049:6:4"
																				},
																				"nativeSrc": "5049:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5049:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5079:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "5079:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5086:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "5086:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5095:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "5095:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5082:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5082:3:4"
																						},
																						"nativeSrc": "5082:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5082:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5076:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "5076:2:4"
																				},
																				"nativeSrc": "5076:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5076:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5029:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5029:2:4"
																		},
																		"nativeSrc": "5029:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5029:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5009:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:4"
																},
																"nativeSrc": "5009:113:4",
																"nodeType": "YulFunctionCall",
																"src": "5009:113:4"
															},
															"nativeSrc": "5006:139:4",
															"nodeType": "YulIf",
															"src": "5006:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4742:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4773:1:4",
														"nodeType": "YulTypedName",
														"src": "4773:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4776:1:4",
														"nodeType": "YulTypedName",
														"src": "4776:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4782:7:4",
														"nodeType": "YulTypedName",
														"src": "4782:7:4",
														"type": ""
													}
												],
												"src": "4742:410:4"
											},
											{
												"body": {
													"nativeSrc": "5186:152:4",
													"nodeType": "YulBlock",
													"src": "5186:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5203:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5206:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5196:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:4"
																},
																"nativeSrc": "5196:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5196:88:4"
															},
															"nativeSrc": "5196:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5196:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5300:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5303:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5303:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5293:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:4"
																},
																"nativeSrc": "5293:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5293:15:4"
															},
															"nativeSrc": "5293:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5293:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5324:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5324:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5327:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5327:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5317:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:4"
																},
																"nativeSrc": "5317:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5317:15:4"
															},
															"nativeSrc": "5317:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5317:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5158:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5158:180:4"
											},
											{
												"body": {
													"nativeSrc": "5386:143:4",
													"nodeType": "YulBlock",
													"src": "5386:143:4",
													"statements": [
														{
															"nativeSrc": "5396:25:4",
															"nodeType": "YulAssignment",
															"src": "5396:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5419:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5419:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5401:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5401:17:4"
																},
																"nativeSrc": "5401:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5401:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5396:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5396:1:4"
																}
															]
														},
														{
															"nativeSrc": "5430:25:4",
															"nodeType": "YulAssignment",
															"src": "5430:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5453:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5453:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5435:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5435:17:4"
																},
																"nativeSrc": "5435:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5435:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5430:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5430:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5477:22:4",
																"nodeType": "YulBlock",
																"src": "5477:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5479:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5479:16:4"
																			},
																			"nativeSrc": "5479:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5479:18:4"
																		},
																		"nativeSrc": "5479:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5479:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5474:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5474:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5467:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5467:6:4"
																},
																"nativeSrc": "5467:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5467:9:4"
															},
															"nativeSrc": "5464:35:4",
															"nodeType": "YulIf",
															"src": "5464:35:4"
														},
														{
															"nativeSrc": "5509:14:4",
															"nodeType": "YulAssignment",
															"src": "5509:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5518:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5518:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5521:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5521:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5514:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5514:3:4"
																},
																"nativeSrc": "5514:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5514:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5509:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5509:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5344:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5375:1:4",
														"nodeType": "YulTypedName",
														"src": "5375:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5378:1:4",
														"nodeType": "YulTypedName",
														"src": "5378:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5384:1:4",
														"nodeType": "YulTypedName",
														"src": "5384:1:4",
														"type": ""
													}
												],
												"src": "5344:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Icharity_$183_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Icharity_$183_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Icharity_$183_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Icharity_$183__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Icharity_$183_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"194": [
									{
										"length": 32,
										"start": 647
									},
									{
										"length": 32,
										"start": 769
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100db578063934aa02314610105578063d0e30db01461012f578063f2fde38b146101395761006f565b80632e1a7d4d146100735780634f0d1b2a1461009b578063715018a6146100c5575b5f80fd5b34801561007e575f80fd5b5061009960048036038101906100949190610589565b610161565b005b3480156100a6575f80fd5b506100af610246565b6040516100bc91906105c3565b60405180910390f35b3480156100d0575f80fd5b506100d961024b565b005b3480156100e6575f80fd5b506100ef61025e565b6040516100fc919061061b565b60405180910390f35b348015610110575f80fd5b50610119610285565b604051610126919061068f565b60405180910390f35b6101376102a9565b005b348015610144575f80fd5b5061015f600480360381019061015a91906106d2565b61037f565b005b610169610403565b478111156101a3576040517fd721fcb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516101c89061072a565b5f6040518083038185875af1925050503d805f8114610202576040519150601f19603f3d011682016040523d82523d5f602084013e610207565b606091505b5050905080610242576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b603281565b610253610403565b61025c5f61048a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f34036102e2576040517f652c9e7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103e86032346102f3919061076b565b6102fd91906107d9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ed88c68e826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610365575f80fd5b505af1158015610377573d5f803e3d5ffd5b505050505050565b610387610403565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103ee919061061b565b60405180910390fd5b6104008161048a565b50565b61040b61054b565b73ffffffffffffffffffffffffffffffffffffffff1661042961025e565b73ffffffffffffffffffffffffffffffffffffffff16146104885761044c61054b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161047f919061061b565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61056881610556565b8114610572575f80fd5b50565b5f813590506105838161055f565b92915050565b5f6020828403121561059e5761059d610552565b5b5f6105ab84828501610575565b91505092915050565b6105bd81610556565b82525050565b5f6020820190506105d65f8301846105b4565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610605826105dc565b9050919050565b610615816105fb565b82525050565b5f60208201905061062e5f83018461060c565b92915050565b5f819050919050565b5f61065761065261064d846105dc565b610634565b6105dc565b9050919050565b5f6106688261063d565b9050919050565b5f6106798261065e565b9050919050565b6106898161066f565b82525050565b5f6020820190506106a25f830184610680565b92915050565b6106b1816105fb565b81146106bb575f80fd5b50565b5f813590506106cc816106a8565b92915050565b5f602082840312156106e7576106e6610552565b5b5f6106f4848285016106be565b91505092915050565b5f81905092915050565b50565b5f6107155f836106fd565b915061072082610707565b5f82019050919050565b5f6107348261070a565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61077582610556565b915061078083610556565b925082820261078e81610556565b915082820484148315176107a5576107a461073e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6107e382610556565b91506107ee83610556565b9250826107fe576107fd6107ac565b5b82820490509291505056fea26469706673582212207422dadf5f85edc0a5610f157a5cdd15976b13aa8475a020edde78579c1f5beb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x139 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x4F0D1B2A EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x24B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x403 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD721FCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x207 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x253 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x25C PUSH0 PUSH2 0x48A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x652C9E7A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x32 CALLVALUE PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED88C68E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x387 PUSH2 0x403 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x400 DUP2 PUSH2 0x48A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x40B PUSH2 0x54B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x429 PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x488 JUMPI PUSH2 0x44C PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x556 JUMP JUMPDEST DUP2 EQ PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x583 DUP2 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x552 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5AB DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x556 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x605 DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62E PUSH0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x657 PUSH2 0x652 PUSH2 0x64D DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x668 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x679 DUP3 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x689 DUP2 PUSH2 0x66F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B1 DUP2 PUSH2 0x5FB JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6CC DUP2 PUSH2 0x6A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH2 0x552 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6F4 DUP5 DUP3 DUP6 ADD PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x715 PUSH0 DUP4 PUSH2 0x6FD JUMP JUMPDEST SWAP2 POP PUSH2 0x720 DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x734 DUP3 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x775 DUP3 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP PUSH2 0x780 DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x78E DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x73E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7E3 DUP3 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EE DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x7AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x22DADF5F85EDC0A5610F157A5CDD15976B13AA8475 LOG0 KECCAK256 0xED 0xDE PUSH25 0x579C1F5BEB64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "140:866:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;215:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:33:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:254;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;746:255:3;1531:13:0;:11;:13::i;:::-;822:21:3::1;813:6;:30;810:58;;;852:16;;;;;;;;;;;;;;810:58;880:12;906:10;898:24;;930:6;898:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:62;;;961:7;956:37;;977:16;;;;;;;;;;;;;;956:37;799:202;746:255:::0;:::o;215:47::-;260:2;215:47;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;174:33:3:-;;;:::o;484:254::-;547:1;534:9;:14;531:80;;581:18;;;;;;;;;;;;;;531:80;621:21;678:4;260:2;646:9;:30;;;;:::i;:::-;645:37;;;;:::i;:::-;621:61;;693:7;:14;;;714:13;693:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:218;484:254::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:60::-;1991:3;2012:5;2005:12;;1963:60;;;:::o;2029:142::-;2079:9;2112:53;2130:34;2139:24;2157:5;2139:24;:::i;:::-;2130:34;:::i;:::-;2112:53;:::i;:::-;2099:66;;2029:142;;;:::o;2177:126::-;2227:9;2260:37;2291:5;2260:37;:::i;:::-;2247:50;;2177:126;;;:::o;2309:142::-;2375:9;2408:37;2439:5;2408:37;:::i;:::-;2395:50;;2309:142;;;:::o;2457:163::-;2560:53;2607:5;2560:53;:::i;:::-;2555:3;2548:66;2457:163;;:::o;2626:254::-;2735:4;2773:2;2762:9;2758:18;2750:26;;2786:87;2870:1;2859:9;2855:17;2846:6;2786:87;:::i;:::-;2626:254;;;;:::o;2886:122::-;2959:24;2977:5;2959:24;:::i;:::-;2952:5;2949:35;2939:63;;2998:1;2995;2988:12;2939:63;2886:122;:::o;3014:139::-;3060:5;3098:6;3085:20;3076:29;;3114:33;3141:5;3114:33;:::i;:::-;3014:139;;;;:::o;3159:329::-;3218:6;3267:2;3255:9;3246:7;3242:23;3238:32;3235:119;;;3273:79;;:::i;:::-;3235:119;3393:1;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;:::i;:::-;3408:63;;3364:117;3159:329;;;;:::o;3494:147::-;3595:11;3632:3;3617:18;;3494:147;;;;:::o;3647:114::-;;:::o;3767:398::-;3926:3;3947:83;4028:1;4023:3;3947:83;:::i;:::-;3940:90;;4039:93;4128:3;4039:93;:::i;:::-;4157:1;4152:3;4148:11;4141:18;;3767:398;;;:::o;4171:379::-;4355:3;4377:147;4520:3;4377:147;:::i;:::-;4370:154;;4541:3;4534:10;;4171:379;;;:::o;4556:180::-;4604:77;4601:1;4594:88;4701:4;4698:1;4691:15;4725:4;4722:1;4715:15;4742:410;4782:7;4805:20;4823:1;4805:20;:::i;:::-;4800:25;;4839:20;4857:1;4839:20;:::i;:::-;4834:25;;4894:1;4891;4887:9;4916:30;4934:11;4916:30;:::i;:::-;4905:41;;5095:1;5086:7;5082:15;5079:1;5076:22;5056:1;5049:9;5029:83;5006:139;;5125:18;;:::i;:::-;5006:139;4790:362;4742:410;;;;:::o;5158:180::-;5206:77;5203:1;5196:88;5303:4;5300:1;5293:15;5327:4;5324:1;5317:15;5344:185;5384:1;5401:20;5419:1;5401:20;:::i;:::-;5396:25;;5435:20;5453:1;5435:20;:::i;:::-;5430:25;;5474:1;5464:35;;5479:18;;:::i;:::-;5464:35;5521:1;5518;5514:9;5509:14;;5344:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "422200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CHARITY_PERCENTAGE()": "348",
								"charity()": "infinite",
								"deposit()": "infinite",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 368,
									"end": 476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 476,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 412,
									"end": 422,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 453,
									"end": 467,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 434,
									"end": 468,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 368,
									"end": 476,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "194"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 1006,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207422dadf5f85edc0a5610f157a5cdd15976b13aa8475a020edde78579c1f5beb64736f6c634300081a0033",
									".code": [
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "934AA023"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "4F0D1B2A"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 140,
											"end": 1006,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 746,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 746,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 215,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 215,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 174,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 484,
											"end": 738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 484,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 484,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 484,
											"end": 738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 843,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 843,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "D721FCB200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 852,
											"end": 868,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 880,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 916,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 898,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 898,
											"end": 922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 930,
											"end": 936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 898,
											"end": 941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 898,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 961,
											"end": 968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 956,
											"end": 993,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 977,
											"end": 993,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 956,
											"end": 993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 956,
											"end": 993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 799,
											"end": 1001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 746,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 215,
											"end": 262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 174,
											"end": 207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 174,
											"end": 207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 484,
											"end": 738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 543,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 534,
											"end": 548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 531,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 531,
											"end": 611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "652C9E7A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 581,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 599,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 611,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 531,
											"end": 611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 646,
											"end": 676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 646,
											"end": 676,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 645,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 645,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 682,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 621,
											"end": 682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 693,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "ED88C68E"
										},
										{
											"begin": 714,
											"end": 727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 520,
											"end": 738,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2139,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2130,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2112,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2260,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2309,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2408,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2445,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2408,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2445,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2620,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2457,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2560,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2560,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2620,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2620,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2786,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2873,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2786,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2886,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2959,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2984,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 3008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3105,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3114,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3114,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3235,
											"end": 3354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3273,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3273,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3352,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3273,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3354,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3235,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3452,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3418,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3947,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4030,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4039,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4377,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4736,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4556,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4601,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4594,
											"end": 4682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 4705,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4730,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4805,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4805,
											"end": 4825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4805,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4805,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4857,
											"end": 4858,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4859,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4839,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4859,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4934,
											"end": 4945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4946,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4916,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5098,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5112,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5006,
											"end": 5145,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5125,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5006,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 5152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5338,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5158,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5206,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5293,
											"end": 5308,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5327,
											"end": 5331,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5401,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5435,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5464,
											"end": 5499,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5479,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5499,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5464,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Icharity.sol",
								"wallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CHARITY_PERCENTAGE()": "4f0d1b2a",
							"charity()": "934aa023",
							"deposit()": "d0e30db0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charityAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughMoney\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHARITY_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charity\",\"outputs\":[{\"internalType\":\"contract Icharity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wallet.sol\":\"Wallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Icharity.sol\":{\"keccak256\":\"0x8d560ed34aef4b987bb60b3fbdfb82ac0db81e8faec21e7c4459c187892cef76\",\"urls\":[\"bzz-raw://3ba14d134b1ce1de2a93ab89b9facddfcbcf395e8de9fb20120c96fca87accdb\",\"dweb:/ipfs/QmaZ2hYRT6rkMqh6PMb17yBUNtcdUsEpdCc6EtCXHukzUM\"]},\"wallet.sol\":{\"keccak256\":\"0x7317f7b1abd7663fea778dbd4983bf5297e4c625cb08675d5957b50616884bc5\",\"urls\":[\"bzz-raw://3d40cf9aa08b68f8d89a58b017e4d9a6655d6a04cfdb79c99bb2b2868a9141c8\",\"dweb:/ipfs/QmNbjmwhusXoJ6RuTm6V9sg7Kt6L4FQby23DmeGJpsCugW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "wallet.sol:Wallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Icharity.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Icharity.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> wallet.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "wallet.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"Icharity.sol": {
				"ast": {
					"absolutePath": "Icharity.sol",
					"exportedSymbols": {
						"Icharity": [
							183
						]
					},
					"id": 184,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Icharity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 183,
							"linearizedBaseContracts": [
								183
							],
							"name": "Icharity",
							"nameLocation": "37:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ed88c68e",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "70:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76:2:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "95:0:2"
									},
									"scope": 183,
									"src": "61:35:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 184,
							"src": "27:72:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:99:2"
				},
				"id": 2
			},
			"wallet.sol": {
				"ast": {
					"absolutePath": "wallet.sol",
					"exportedSymbols": {
						"Icharity": [
							183
						],
						"Ownable": [
							147
						],
						"Wallet": [
							288
						]
					},
					"id": 289,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 185,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 148,
							"src": "27:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 186,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "35:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Icharity.sol",
							"file": "./Icharity.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 184,
							"src": "96:40:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 188,
										"name": "Icharity",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 183,
										"src": "104:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "Ownable",
										"nameLocations": [
											"159:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "159:7:3"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "159:7:3"
								}
							],
							"canonicalName": "Wallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 288,
							"linearizedBaseContracts": [
								288,
								147,
								177
							],
							"name": "Wallet",
							"nameLocation": "149:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "934aa023",
									"id": 194,
									"mutability": "immutable",
									"name": "charity",
									"nameLocation": "200:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "174:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Icharity_$183",
										"typeString": "contract Icharity"
									},
									"typeName": {
										"id": 193,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 192,
											"name": "Icharity",
											"nameLocations": [
												"174:8:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 183,
											"src": "174:8:3"
										},
										"referencedDeclaration": 183,
										"src": "174:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Icharity_$183",
											"typeString": "contract Icharity"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4f0d1b2a",
									"id": 197,
									"mutability": "constant",
									"name": "CHARITY_PERCENTAGE",
									"nameLocation": "239:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "215:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "260:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"errorSelector": "652c9e7a",
									"id": 199,
									"name": "NotEnoughDeposit",
									"nameLocation": "283:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:3"
									},
									"src": "277:25:3"
								},
								{
									"errorSelector": "d721fcb2",
									"id": 201,
									"name": "NotEnoughMoney",
									"nameLocation": "313:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:3"
									},
									"src": "307:23:3"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 203,
									"name": "TransferFailed",
									"nameLocation": "341:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:3"
									},
									"src": "335:23:3"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "423:53:3",
										"statements": [
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "charity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "434:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Icharity_$183",
															"typeString": "contract Icharity"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 214,
																"name": "charityAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "453:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 213,
															"name": "Icharity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "444:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Icharity_$183_$",
																"typeString": "type(contract Icharity)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "444:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Icharity_$183",
															"typeString": "contract Icharity"
														}
													},
													"src": "434:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Icharity_$183",
														"typeString": "contract Icharity"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "434:34:3"
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 208,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "412:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "416:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "412:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 210,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 207,
												"name": "Ownable",
												"nameLocations": [
													"404:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "404:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "404:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "charityAddress",
												"nameLocation": "388:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "380:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:24:3"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:0:3"
									},
									"scope": 288,
									"src": "368:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "520:218:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 222,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "534:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "538:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "534:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "547:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "534:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "531:80:3",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "559:52:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 226,
																	"name": "NotEnoughDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "581:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "581:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 228,
															"nodeType": "RevertStatement",
															"src": "574:25:3"
														}
													]
												}
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "charityAmount",
														"nameLocation": "629:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "621:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "621:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 233,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "646:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "650:5:3",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "646:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 235,
																	"name": "CHARITY_PERCENTAGE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "658:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "646:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 237,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "645:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "678:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "645:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "621:61:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 241,
																"name": "charity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "693:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Icharity_$183",
																	"typeString": "contract Icharity"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "701:6:3",
															"memberName": "donate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "693:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 244,
																"name": "charityAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "714:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "693:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "693:37:3"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "493:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:2:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:3"
									},
									"scope": 288,
									"src": "484:254:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "799:202:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 256,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "813:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 259,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "830:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Wallet_$288",
																		"typeString": "contract Wallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Wallet_$288",
																		"typeString": "contract Wallet"
																	}
																],
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "822:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 257,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "822:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "836:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "822:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "813:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 266,
												"nodeType": "IfStatement",
												"src": "810:58:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 263,
															"name": "NotEnoughMoney",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "852:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "852:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 265,
													"nodeType": "RevertStatement",
													"src": "845:23:3"
												}
											},
											{
												"assignments": [
													268,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "885:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "880:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 267,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "880:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 279,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "938:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 271,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "906:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "910:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "906:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "898:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "898:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "898:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "918:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "898:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 275,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "930:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "898:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "879:62:3"
											},
											{
												"condition": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "960:8:3",
													"subExpression": {
														"id": 280,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "961:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "956:37:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 282,
															"name": "TransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "977:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "977:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 284,
													"nodeType": "RevertStatement",
													"src": "970:23:3"
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 253,
												"name": "onlyOwner",
												"nameLocations": [
													"790:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "790:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "790:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "755:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "773:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "765:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:16:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:3"
									},
									"scope": 288,
									"src": "746:255:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 289,
							"src": "140:866:3",
							"usedErrors": [
								13,
								18,
								199,
								201,
								203
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "0:1006:3"
				},
				"id": 3
			}
		}
	}
}