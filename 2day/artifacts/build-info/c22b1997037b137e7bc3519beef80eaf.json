{
	"id": "c22b1997037b137e7bc3519beef80eaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"2day/Auction.sol": {
				"content": "pragma solidity 0.8.26;\r\n\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Auction is Ownable{\r\n    address feeAddress;\r\n    uint256 feePercentage;\r\n    uint256 startTime;\r\n    uint256 endTime;\r\n    bool ended;\r\n    address highestBidder;\r\n    uint256 highestBid;\r\n    mapping(address => uint256) bids;\r\n    \r\n    error AuctionAlreadyEnded();\r\n    error AuctionNotYetEnded();\r\n    error BidNotHighEnough(uint256 highestBid);\r\n    error AuctionAlreadyStarted();\r\n    error NoBidToWithdraw();\r\n    error TransferFailed();\r\n\r\n    event AuctionStarted(uint256 startTime, uint256 endTime);\r\n    event HighestBidIncreased(address indexed bidder, uint256 amount);\r\n    event AuctionEnded(address winner, uint256 amount);\r\n\r\n    function startAuction(uint256 _biddingTime) external {\r\n        if (block.timestamp > startTime) revert AuctionAlreadyStarted();\r\n        startTime = block.timestamp;\r\n        endTime = startTime + _biddingTime;\r\n        emit AuctionStarted(startTime, endTime);\r\n    }\r\n\r\n    function bid() external payable {\r\n        if (block.timestamp > endTime)    revert AuctionAlreadyEnded();\r\n        if(msg.value <= highestBid) revert BidNotHighEnough(highestBid);\r\n\r\n        if (highestBidder != address(0)) {\r\n            (bool success, ) = payable(highestBidder).call{value: highestBid}(\r\n                \"\"\r\n            );\r\n            if (!success) {\r\n                revert TransferFailed();\r\n            }\r\n            bids[highestBidder] = 0;\r\n        }\r\n\r\n        highestBidder = msg.sender;\r\n\r\n        bids[msg.sender] = msg.value;\r\n        highestBid = msg.value;\r\n        emit HighestBidIncreased(msg.sender, msg.value);       \r\n    }\r\n\r\n    function calculateFee(uint256 amount) internal view returns (uint256) {\r\n        return (amount * feePercentage) / 100;\r\n    }\r\n    \r\n\r\n    function endAuction() external {\r\n        if (block.timestamp <= endTime) {\r\n            revert AuctionNotYetEnded();\r\n        }\r\n        if (ended)    revert AuctionAlreadyEnded();\r\n        if (block.timestamp < endTime)    revert AuctionNotYetEnded();\r\n\r\n        uint256 fee = calculateFee(highestBid);\r\n        uint256 amount = highestBid - fee;\r\n        transferFee(fee);\r\n        transferToOwner(amount);\r\n\r\n        emit AuctionEnded(highestBidder, highestBid);\r\n        ended = true;\r\n    }\r\n\r\n    function transferFee(uint256 fee) internal {\r\n        (bool success, ) = feeAddress.call{value: fee}(\"\");\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    function transferToOwner(uint256 amount) internal {\r\n        (bool success, ) = payable(owner()).call{value: amount}(\"\");\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    constructor(address _ownerAddress, address _feeAddress, uint256 _feePercentage) \r\n    Ownable(_ownerAddress) {\r\n        feeAddress = _feeAddress;\r\n        feePercentage = _feePercentage;\r\n     }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"2day/Auction.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ownerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feePercentage",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AuctionAlreadyEnded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AuctionAlreadyStarted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AuctionNotYetEnded",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "highestBid",
									"type": "uint256"
								}
							],
							"name": "BidNotHighEnough",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoBidToWithdraw",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AuctionEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "AuctionStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "HighestBidIncreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_biddingTime",
									"type": "uint256"
								}
							],
							"name": "startAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"2day/Auction.sol\":98:2946  contract Auction is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"2day/Auction.sol\":2747:2941  constructor(address _ownerAddress, address _feeAddress, uint256 _feePercentage) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"2day/Auction.sol\":2841:2854  _ownerAddress */\n  dup3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"2day/Auction.sol\":2880:2891  _feeAddress */\n  dup2\n    /* \"2day/Auction.sol\":2867:2877  feeAddress */\n  0x01\n  0x00\n    /* \"2day/Auction.sol\":2867:2891  feeAddress = _feeAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"2day/Auction.sol\":2918:2932  _feePercentage */\n  dup1\n    /* \"2day/Auction.sol\":2902:2915  feePercentage */\n  0x02\n    /* \"2day/Auction.sol\":2902:2932  feePercentage = _feePercentage */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"2day/Auction.sol\":2747:2941  constructor(address _ownerAddress, address _feeAddress, uint256 _feePercentage) ... */\n  pop\n  pop\n  pop\n    /* \"2day/Auction.sol\":98:2946  contract Auction is Ownable{... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_40\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_41:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1326:1445   */\ntag_45:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_47\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_48\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_49\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_25:\n    /* \"#utility.yul\":1961:1985   */\n  tag_51\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_53\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"2day/Auction.sol\":98:2946  contract Auction is Ownable{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"2day/Auction.sol\":98:2946  contract Auction is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x065de74c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1998aeef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfe67a54b\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"2day/Auction.sol\":753:1021  function startAuction(uint256 _biddingTime) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"2day/Auction.sol\":1029:1691  function bid() external payable {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"2day/Auction.sol\":1839:2335  function endAuction() external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"2day/Auction.sol\":753:1021  function startAuction(uint256 _biddingTime) external {... */\n    tag_12:\n        /* \"2day/Auction.sol\":839:848  startTime */\n      sload(0x03)\n        /* \"2day/Auction.sol\":821:836  block.timestamp */\n      timestamp\n        /* \"2day/Auction.sol\":821:848  block.timestamp > startTime */\n      gt\n        /* \"2day/Auction.sol\":817:880  if (block.timestamp > startTime) revert AuctionAlreadyStarted() */\n      iszero\n      tag_32\n      jumpi\n        /* \"2day/Auction.sol\":857:880  AuctionAlreadyStarted() */\n      mload(0x40)\n      0x628e388300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":817:880  if (block.timestamp > startTime) revert AuctionAlreadyStarted() */\n    tag_32:\n        /* \"2day/Auction.sol\":903:918  block.timestamp */\n      timestamp\n        /* \"2day/Auction.sol\":891:900  startTime */\n      0x03\n        /* \"2day/Auction.sol\":891:918  startTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":951:963  _biddingTime */\n      dup1\n        /* \"2day/Auction.sol\":939:948  startTime */\n      sload(0x03)\n        /* \"2day/Auction.sol\":939:963  startTime + _biddingTime */\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"2day/Auction.sol\":929:936  endTime */\n      0x04\n        /* \"2day/Auction.sol\":929:963  endTime = startTime + _biddingTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":979:1013  AuctionStarted(startTime, endTime) */\n      0xf8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c\n        /* \"2day/Auction.sol\":994:1003  startTime */\n      sload(0x03)\n        /* \"2day/Auction.sol\":1005:1012  endTime */\n      sload(0x04)\n        /* \"2day/Auction.sol\":979:1013  AuctionStarted(startTime, endTime) */\n      mload(0x40)\n      tag_35\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"2day/Auction.sol\":753:1021  function startAuction(uint256 _biddingTime) external {... */\n      pop\n      jump\t// out\n        /* \"2day/Auction.sol\":1029:1691  function bid() external payable {... */\n    tag_14:\n        /* \"2day/Auction.sol\":1094:1101  endTime */\n      sload(0x04)\n        /* \"2day/Auction.sol\":1076:1091  block.timestamp */\n      timestamp\n        /* \"2day/Auction.sol\":1076:1101  block.timestamp > endTime */\n      gt\n        /* \"2day/Auction.sol\":1072:1134  if (block.timestamp > endTime)    revert AuctionAlreadyEnded() */\n      iszero\n      tag_38\n      jumpi\n        /* \"2day/Auction.sol\":1113:1134  AuctionAlreadyEnded() */\n      mload(0x40)\n      0xd02e774d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":1072:1134  if (block.timestamp > endTime)    revert AuctionAlreadyEnded() */\n    tag_38:\n        /* \"2day/Auction.sol\":1161:1171  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":1148:1157  msg.value */\n      callvalue\n        /* \"2day/Auction.sol\":1148:1171  msg.value <= highestBid */\n      gt\n        /* \"2day/Auction.sol\":1145:1208  if(msg.value <= highestBid) revert BidNotHighEnough(highestBid) */\n      tag_39\n      jumpi\n        /* \"2day/Auction.sol\":1197:1207  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":1180:1208  BidNotHighEnough(highestBid) */\n      mload(0x40)\n      0x4e12c1bb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":1145:1208  if(msg.value <= highestBid) revert BidNotHighEnough(highestBid) */\n    tag_39:\n        /* \"2day/Auction.sol\":1250:1251  0 */\n      0x00\n        /* \"2day/Auction.sol\":1225:1252  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":1225:1238  highestBidder */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":1225:1252  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"2day/Auction.sol\":1221:1506  if (highestBidder != address(0)) {... */\n      tag_42\n      jumpi\n        /* \"2day/Auction.sol\":1270:1282  bool success */\n      0x00\n        /* \"2day/Auction.sol\":1296:1309  highestBidder */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":1288:1315  payable(highestBidder).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":1323:1333  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":1288:1370  payable(highestBidder).call{value: highestBid}(... */\n      mload(0x40)\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_47\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_46)\n    tag_47:\n      0x60\n      swap2\n      pop\n    tag_46:\n      pop\n        /* \"2day/Auction.sol\":1269:1370  (bool success, ) = payable(highestBidder).call{value: highestBid}(... */\n      pop\n      swap1\n      pop\n        /* \"2day/Auction.sol\":1390:1397  success */\n      dup1\n        /* \"2day/Auction.sol\":1385:1457  if (!success) {... */\n      tag_48\n      jumpi\n        /* \"2day/Auction.sol\":1425:1441  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":1385:1457  if (!success) {... */\n    tag_48:\n        /* \"2day/Auction.sol\":1493:1494  0 */\n      0x00\n        /* \"2day/Auction.sol\":1471:1475  bids */\n      0x07\n        /* \"2day/Auction.sol\":1471:1490  bids[highestBidder] */\n      0x00\n        /* \"2day/Auction.sol\":1476:1489  highestBidder */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":1471:1490  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"2day/Auction.sol\":1471:1494  bids[highestBidder] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":1254:1506  {... */\n      pop\n        /* \"2day/Auction.sol\":1221:1506  if (highestBidder != address(0)) {... */\n    tag_42:\n        /* \"2day/Auction.sol\":1534:1544  msg.sender */\n      caller\n        /* \"2day/Auction.sol\":1518:1531  highestBidder */\n      0x05\n      0x01\n        /* \"2day/Auction.sol\":1518:1544  highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":1576:1585  msg.value */\n      callvalue\n        /* \"2day/Auction.sol\":1557:1561  bids */\n      0x07\n        /* \"2day/Auction.sol\":1557:1573  bids[msg.sender] */\n      0x00\n        /* \"2day/Auction.sol\":1562:1572  msg.sender */\n      caller\n        /* \"2day/Auction.sol\":1557:1573  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"2day/Auction.sol\":1557:1585  bids[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":1609:1618  msg.value */\n      callvalue\n        /* \"2day/Auction.sol\":1596:1606  highestBid */\n      0x06\n        /* \"2day/Auction.sol\":1596:1618  highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":1654:1664  msg.sender */\n      caller\n        /* \"2day/Auction.sol\":1634:1676  HighestBidIncreased(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300\n        /* \"2day/Auction.sol\":1666:1675  msg.value */\n      callvalue\n        /* \"2day/Auction.sol\":1634:1676  HighestBidIncreased(msg.sender, msg.value) */\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"2day/Auction.sol\":1029:1691  function bid() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_60\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"2day/Auction.sol\":1839:2335  function endAuction() external {... */\n    tag_30:\n        /* \"2day/Auction.sol\":1904:1911  endTime */\n      sload(0x04)\n        /* \"2day/Auction.sol\":1885:1900  block.timestamp */\n      timestamp\n        /* \"2day/Auction.sol\":1885:1911  block.timestamp <= endTime */\n      gt\n        /* \"2day/Auction.sol\":1881:1967  if (block.timestamp <= endTime) {... */\n      tag_64\n      jumpi\n        /* \"2day/Auction.sol\":1935:1955  AuctionNotYetEnded() */\n      mload(0x40)\n      0x44cee29000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":1881:1967  if (block.timestamp <= endTime) {... */\n    tag_64:\n        /* \"2day/Auction.sol\":1981:1986  ended */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"2day/Auction.sol\":1977:2019  if (ended)    revert AuctionAlreadyEnded() */\n      iszero\n      tag_65\n      jumpi\n        /* \"2day/Auction.sol\":1998:2019  AuctionAlreadyEnded() */\n      mload(0x40)\n      0xd02e774d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":1977:2019  if (ended)    revert AuctionAlreadyEnded() */\n    tag_65:\n        /* \"2day/Auction.sol\":2052:2059  endTime */\n      sload(0x04)\n        /* \"2day/Auction.sol\":2034:2049  block.timestamp */\n      timestamp\n        /* \"2day/Auction.sol\":2034:2059  block.timestamp < endTime */\n      lt\n        /* \"2day/Auction.sol\":2030:2091  if (block.timestamp < endTime)    revert AuctionNotYetEnded() */\n      iszero\n      tag_66\n      jumpi\n        /* \"2day/Auction.sol\":2071:2091  AuctionNotYetEnded() */\n      mload(0x40)\n      0x44cee29000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":2030:2091  if (block.timestamp < endTime)    revert AuctionNotYetEnded() */\n    tag_66:\n        /* \"2day/Auction.sol\":2104:2115  uint256 fee */\n      0x00\n        /* \"2day/Auction.sol\":2118:2142  calculateFee(highestBid) */\n      tag_67\n        /* \"2day/Auction.sol\":2131:2141  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":2118:2130  calculateFee */\n      tag_68\n        /* \"2day/Auction.sol\":2118:2142  calculateFee(highestBid) */\n      jump\t// in\n    tag_67:\n        /* \"2day/Auction.sol\":2104:2142  uint256 fee = calculateFee(highestBid) */\n      swap1\n      pop\n        /* \"2day/Auction.sol\":2153:2167  uint256 amount */\n      0x00\n        /* \"2day/Auction.sol\":2183:2186  fee */\n      dup2\n        /* \"2day/Auction.sol\":2170:2180  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":2170:2186  highestBid - fee */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"2day/Auction.sol\":2153:2186  uint256 amount = highestBid - fee */\n      swap1\n      pop\n        /* \"2day/Auction.sol\":2197:2213  transferFee(fee) */\n      tag_71\n        /* \"2day/Auction.sol\":2209:2212  fee */\n      dup3\n        /* \"2day/Auction.sol\":2197:2208  transferFee */\n      tag_72\n        /* \"2day/Auction.sol\":2197:2213  transferFee(fee) */\n      jump\t// in\n    tag_71:\n        /* \"2day/Auction.sol\":2224:2247  transferToOwner(amount) */\n      tag_73\n        /* \"2day/Auction.sol\":2240:2246  amount */\n      dup2\n        /* \"2day/Auction.sol\":2224:2239  transferToOwner */\n      tag_74\n        /* \"2day/Auction.sol\":2224:2247  transferToOwner(amount) */\n      jump\t// in\n    tag_73:\n        /* \"2day/Auction.sol\":2265:2304  AuctionEnded(highestBidder, highestBid) */\n      0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda\n        /* \"2day/Auction.sol\":2278:2291  highestBidder */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":2293:2303  highestBid */\n      sload(0x06)\n        /* \"2day/Auction.sol\":2265:2304  AuctionEnded(highestBidder, highestBid) */\n      mload(0x40)\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"2day/Auction.sol\":2323:2327  true */\n      0x01\n        /* \"2day/Auction.sol\":2315:2320  ended */\n      0x05\n      0x00\n        /* \"2day/Auction.sol\":2315:2327  ended = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"2day/Auction.sol\":1870:2335  {... */\n      pop\n      pop\n        /* \"2day/Auction.sol\":1839:2335  function endAuction() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"2day/Auction.sol\":1699:1825  function calculateFee(uint256 amount) internal view returns (uint256) {... */\n    tag_68:\n        /* \"2day/Auction.sol\":1760:1767  uint256 */\n      0x00\n        /* \"2day/Auction.sol\":1814:1817  100 */\n      0x64\n        /* \"2day/Auction.sol\":1797:1810  feePercentage */\n      sload(0x02)\n        /* \"2day/Auction.sol\":1788:1794  amount */\n      dup4\n        /* \"2day/Auction.sol\":1788:1810  amount * feePercentage */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"2day/Auction.sol\":1787:1817  (amount * feePercentage) / 100 */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"2day/Auction.sol\":1780:1817  return (amount * feePercentage) / 100 */\n      swap1\n      pop\n        /* \"2day/Auction.sol\":1699:1825  function calculateFee(uint256 amount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"2day/Auction.sol\":2343:2529  function transferFee(uint256 fee) internal {... */\n    tag_72:\n        /* \"2day/Auction.sol\":2398:2410  bool success */\n      0x00\n        /* \"2day/Auction.sol\":2416:2426  feeAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":2416:2431  feeAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":2439:2442  fee */\n      dup3\n        /* \"2day/Auction.sol\":2416:2447  feeAddress.call{value: fee}(\"\") */\n      mload(0x40)\n      tag_91\n      swap1\n      tag_44\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_94\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_93)\n    tag_94:\n      0x60\n      swap2\n      pop\n    tag_93:\n      pop\n        /* \"2day/Auction.sol\":2397:2447  (bool success, ) = feeAddress.call{value: fee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"2day/Auction.sol\":2463:2470  success */\n      dup1\n        /* \"2day/Auction.sol\":2458:2522  if (!success) {... */\n      tag_95\n      jumpi\n        /* \"2day/Auction.sol\":2494:2510  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":2458:2522  if (!success) {... */\n    tag_95:\n        /* \"2day/Auction.sol\":2386:2529  {... */\n      pop\n        /* \"2day/Auction.sol\":2343:2529  function transferFee(uint256 fee) internal {... */\n      pop\n      jump\t// out\n        /* \"2day/Auction.sol\":2537:2739  function transferToOwner(uint256 amount) internal {... */\n    tag_74:\n        /* \"2day/Auction.sol\":2599:2611  bool success */\n      0x00\n        /* \"2day/Auction.sol\":2625:2632  owner() */\n      tag_97\n        /* \"2day/Auction.sol\":2625:2630  owner */\n      tag_20\n        /* \"2day/Auction.sol\":2625:2632  owner() */\n      jump\t// in\n    tag_97:\n        /* \"2day/Auction.sol\":2617:2638  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2day/Auction.sol\":2646:2652  amount */\n      dup3\n        /* \"2day/Auction.sol\":2617:2657  payable(owner()).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_98\n      swap1\n      tag_44\n      jump\t// in\n    tag_98:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_101\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_100)\n    tag_101:\n      0x60\n      swap2\n      pop\n    tag_100:\n      pop\n        /* \"2day/Auction.sol\":2598:2657  (bool success, ) = payable(owner()).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"2day/Auction.sol\":2673:2680  success */\n      dup1\n        /* \"2day/Auction.sol\":2668:2732  if (!success) {... */\n      tag_102\n      jumpi\n        /* \"2day/Auction.sol\":2704:2720  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"2day/Auction.sol\":2668:2732  if (!success) {... */\n    tag_102:\n        /* \"2day/Auction.sol\":2587:2739  {... */\n      pop\n        /* \"2day/Auction.sol\":2537:2739  function transferToOwner(uint256 amount) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_105:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_107:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_108:\n        /* \"#utility.yul\":490:514   */\n      tag_127\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_107\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_128:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_109:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_130\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_108\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_133\n      tag_105\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":766:885   */\n    tag_132:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_134\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_109\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_110:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_111:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_137\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_110\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_112:\n        /* \"#utility.yul\":1346:1370   */\n      tag_139\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_22:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_141\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_112\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_113:\n        /* \"#utility.yul\":1684:1708   */\n      tag_143\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_111\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_144:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_114:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_146\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_113\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_26:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_149\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1960:2079   */\n    tag_148:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_150\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_114\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2399   */\n    tag_115:\n        /* \"#utility.yul\":2267:2344   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2264:2265   */\n      0x00\n        /* \"#utility.yul\":2257:2345   */\n      mstore\n        /* \"#utility.yul\":2364:2368   */\n      0x11\n        /* \"#utility.yul\":2361:2362   */\n      0x04\n        /* \"#utility.yul\":2354:2369   */\n      mstore\n        /* \"#utility.yul\":2388:2392   */\n      0x24\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2378:2393   */\n      revert\n        /* \"#utility.yul\":2405:2596   */\n    tag_34:\n        /* \"#utility.yul\":2445:2448   */\n      0x00\n        /* \"#utility.yul\":2464:2484   */\n      tag_153\n        /* \"#utility.yul\":2482:2483   */\n      dup3\n        /* \"#utility.yul\":2464:2484   */\n      tag_107\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2459:2484   */\n      swap2\n      pop\n        /* \"#utility.yul\":2498:2518   */\n      tag_154\n        /* \"#utility.yul\":2516:2517   */\n      dup4\n        /* \"#utility.yul\":2498:2518   */\n      tag_107\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2493:2518   */\n      swap3\n      pop\n        /* \"#utility.yul\":2541:2542   */\n      dup3\n        /* \"#utility.yul\":2538:2539   */\n      dup3\n        /* \"#utility.yul\":2534:2543   */\n      add\n        /* \"#utility.yul\":2527:2543   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2565   */\n      dup1\n        /* \"#utility.yul\":2559:2560   */\n      dup3\n        /* \"#utility.yul\":2556:2566   */\n      gt\n        /* \"#utility.yul\":2553:2589   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2569:2587   */\n      tag_156\n      tag_115\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2553:2589   */\n    tag_155:\n        /* \"#utility.yul\":2405:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2720   */\n    tag_116:\n        /* \"#utility.yul\":2689:2713   */\n      tag_158\n        /* \"#utility.yul\":2707:2712   */\n      dup2\n        /* \"#utility.yul\":2689:2713   */\n      tag_107\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2684:2687   */\n      dup3\n        /* \"#utility.yul\":2677:2714   */\n      mstore\n        /* \"#utility.yul\":2602:2720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2726:3058   */\n    tag_36:\n        /* \"#utility.yul\":2847:2851   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x40\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2862:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2898:2969   */\n      tag_160\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2955:2964   */\n      dup4\n        /* \"#utility.yul\":2951:2968   */\n      add\n        /* \"#utility.yul\":2942:2948   */\n      dup6\n        /* \"#utility.yul\":2898:2969   */\n      tag_116\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2979:3051   */\n      tag_161\n        /* \"#utility.yul\":3047:3049   */\n      0x20\n        /* \"#utility.yul\":3036:3045   */\n      dup4\n        /* \"#utility.yul\":3032:3050   */\n      add\n        /* \"#utility.yul\":3023:3029   */\n      dup5\n        /* \"#utility.yul\":2979:3051   */\n      tag_116\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2726:3058   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3286   */\n    tag_41:\n        /* \"#utility.yul\":3157:3161   */\n      0x00\n        /* \"#utility.yul\":3195:3197   */\n      0x20\n        /* \"#utility.yul\":3184:3193   */\n      dup3\n        /* \"#utility.yul\":3180:3198   */\n      add\n        /* \"#utility.yul\":3172:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3208:3279   */\n      tag_163\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3265:3274   */\n      dup4\n        /* \"#utility.yul\":3261:3278   */\n      add\n        /* \"#utility.yul\":3252:3258   */\n      dup5\n        /* \"#utility.yul\":3208:3279   */\n      tag_116\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3064:3286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3292:3439   */\n    tag_117:\n        /* \"#utility.yul\":3393:3404   */\n      0x00\n        /* \"#utility.yul\":3430:3433   */\n      dup2\n        /* \"#utility.yul\":3415:3433   */\n      swap1\n      pop\n        /* \"#utility.yul\":3292:3439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3445:3559   */\n    tag_118:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3565:3963   */\n    tag_119:\n        /* \"#utility.yul\":3724:3727   */\n      0x00\n        /* \"#utility.yul\":3745:3828   */\n      tag_167\n        /* \"#utility.yul\":3826:3827   */\n      0x00\n        /* \"#utility.yul\":3821:3824   */\n      dup4\n        /* \"#utility.yul\":3745:3828   */\n      tag_117\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3738:3828   */\n      swap2\n      pop\n        /* \"#utility.yul\":3837:3930   */\n      tag_168\n        /* \"#utility.yul\":3926:3929   */\n      dup3\n        /* \"#utility.yul\":3837:3930   */\n      tag_118\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3955:3956   */\n      0x00\n        /* \"#utility.yul\":3950:3953   */\n      dup3\n        /* \"#utility.yul\":3946:3957   */\n      add\n        /* \"#utility.yul\":3939:3957   */\n      swap1\n      pop\n        /* \"#utility.yul\":3565:3963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3969:4348   */\n    tag_44:\n        /* \"#utility.yul\":4153:4156   */\n      0x00\n        /* \"#utility.yul\":4175:4322   */\n      tag_170\n        /* \"#utility.yul\":4318:4321   */\n      dup3\n        /* \"#utility.yul\":4175:4322   */\n      tag_119\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4168:4322   */\n      swap2\n      pop\n        /* \"#utility.yul\":4339:4342   */\n      dup2\n        /* \"#utility.yul\":4332:4342   */\n      swap1\n      pop\n        /* \"#utility.yul\":3969:4348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4354:4548   */\n    tag_70:\n        /* \"#utility.yul\":4394:4398   */\n      0x00\n        /* \"#utility.yul\":4414:4434   */\n      tag_172\n        /* \"#utility.yul\":4432:4433   */\n      dup3\n        /* \"#utility.yul\":4414:4434   */\n      tag_107\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4409:4434   */\n      swap2\n      pop\n        /* \"#utility.yul\":4448:4468   */\n      tag_173\n        /* \"#utility.yul\":4466:4467   */\n      dup4\n        /* \"#utility.yul\":4448:4468   */\n      tag_107\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4443:4468   */\n      swap3\n      pop\n        /* \"#utility.yul\":4492:4493   */\n      dup3\n        /* \"#utility.yul\":4489:4490   */\n      dup3\n        /* \"#utility.yul\":4485:4494   */\n      sub\n        /* \"#utility.yul\":4477:4494   */\n      swap1\n      pop\n        /* \"#utility.yul\":4516:4517   */\n      dup2\n        /* \"#utility.yul\":4510:4514   */\n      dup2\n        /* \"#utility.yul\":4507:4518   */\n      gt\n        /* \"#utility.yul\":4504:4541   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4521:4539   */\n      tag_175\n      tag_115\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4504:4541   */\n    tag_174:\n        /* \"#utility.yul\":4354:4548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4554:4886   */\n    tag_76:\n        /* \"#utility.yul\":4675:4679   */\n      0x00\n        /* \"#utility.yul\":4713:4715   */\n      0x40\n        /* \"#utility.yul\":4702:4711   */\n      dup3\n        /* \"#utility.yul\":4698:4716   */\n      add\n        /* \"#utility.yul\":4690:4716   */\n      swap1\n      pop\n        /* \"#utility.yul\":4726:4797   */\n      tag_177\n        /* \"#utility.yul\":4794:4795   */\n      0x00\n        /* \"#utility.yul\":4783:4792   */\n      dup4\n        /* \"#utility.yul\":4779:4796   */\n      add\n        /* \"#utility.yul\":4770:4776   */\n      dup6\n        /* \"#utility.yul\":4726:4797   */\n      tag_112\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4807:4879   */\n      tag_178\n        /* \"#utility.yul\":4875:4877   */\n      0x20\n        /* \"#utility.yul\":4864:4873   */\n      dup4\n        /* \"#utility.yul\":4860:4878   */\n      add\n        /* \"#utility.yul\":4851:4857   */\n      dup5\n        /* \"#utility.yul\":4807:4879   */\n      tag_116\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4554:4886   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4892:5302   */\n    tag_87:\n        /* \"#utility.yul\":4932:4939   */\n      0x00\n        /* \"#utility.yul\":4955:4975   */\n      tag_180\n        /* \"#utility.yul\":4973:4974   */\n      dup3\n        /* \"#utility.yul\":4955:4975   */\n      tag_107\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4950:4975   */\n      swap2\n      pop\n        /* \"#utility.yul\":4989:5009   */\n      tag_181\n        /* \"#utility.yul\":5007:5008   */\n      dup4\n        /* \"#utility.yul\":4989:5009   */\n      tag_107\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4984:5009   */\n      swap3\n      pop\n        /* \"#utility.yul\":5044:5045   */\n      dup3\n        /* \"#utility.yul\":5041:5042   */\n      dup3\n        /* \"#utility.yul\":5037:5046   */\n      mul\n        /* \"#utility.yul\":5066:5096   */\n      tag_182\n        /* \"#utility.yul\":5084:5095   */\n      dup2\n        /* \"#utility.yul\":5066:5096   */\n      tag_107\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5055:5096   */\n      swap2\n      pop\n        /* \"#utility.yul\":5245:5246   */\n      dup3\n        /* \"#utility.yul\":5236:5243   */\n      dup3\n        /* \"#utility.yul\":5232:5247   */\n      div\n        /* \"#utility.yul\":5229:5230   */\n      dup5\n        /* \"#utility.yul\":5226:5248   */\n      eq\n        /* \"#utility.yul\":5206:5207   */\n      dup4\n        /* \"#utility.yul\":5199:5208   */\n      iszero\n        /* \"#utility.yul\":5179:5262   */\n      or\n        /* \"#utility.yul\":5156:5295   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":5275:5293   */\n      tag_184\n      tag_115\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5156:5295   */\n    tag_183:\n        /* \"#utility.yul\":4940:5302   */\n      pop\n        /* \"#utility.yul\":4892:5302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5308:5488   */\n    tag_120:\n        /* \"#utility.yul\":5356:5433   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5353:5354   */\n      0x00\n        /* \"#utility.yul\":5346:5434   */\n      mstore\n        /* \"#utility.yul\":5453:5457   */\n      0x12\n        /* \"#utility.yul\":5450:5451   */\n      0x04\n        /* \"#utility.yul\":5443:5458   */\n      mstore\n        /* \"#utility.yul\":5477:5481   */\n      0x24\n        /* \"#utility.yul\":5474:5475   */\n      0x00\n        /* \"#utility.yul\":5467:5482   */\n      revert\n        /* \"#utility.yul\":5494:5679   */\n    tag_89:\n        /* \"#utility.yul\":5534:5535   */\n      0x00\n        /* \"#utility.yul\":5551:5571   */\n      tag_187\n        /* \"#utility.yul\":5569:5570   */\n      dup3\n        /* \"#utility.yul\":5551:5571   */\n      tag_107\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5546:5571   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5605   */\n      tag_188\n        /* \"#utility.yul\":5603:5604   */\n      dup4\n        /* \"#utility.yul\":5585:5605   */\n      tag_107\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5580:5605   */\n      swap3\n      pop\n        /* \"#utility.yul\":5624:5625   */\n      dup3\n        /* \"#utility.yul\":5614:5649   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5629:5647   */\n      tag_190\n      tag_120\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5614:5649   */\n    tag_189:\n        /* \"#utility.yul\":5671:5672   */\n      dup3\n        /* \"#utility.yul\":5668:5669   */\n      dup3\n        /* \"#utility.yul\":5664:5673   */\n      div\n        /* \"#utility.yul\":5659:5673   */\n      swap1\n      pop\n        /* \"#utility.yul\":5494:5679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206b2e29cf98dfd18c82fb262408cba3c424ad7f1eae6a704c875289b3ce5073af64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_355": {
									"entryPoint": null,
									"id": 355,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_451": {
									"entryPoint": 257,
									"id": 451,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2223:3",
										"nodeType": "YulBlock",
										"src": "0:2223:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "890:32:3",
													"nodeType": "YulBlock",
													"src": "890:32:3",
													"statements": [
														{
															"nativeSrc": "900:16:3",
															"nodeType": "YulAssignment",
															"src": "900:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:3",
																"nodeType": "YulIdentifier",
																"src": "911:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:3",
														"nodeType": "YulTypedName",
														"src": "872:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:3",
														"nodeType": "YulTypedName",
														"src": "882:7:3",
														"type": ""
													}
												],
												"src": "845:77:3"
											},
											{
												"body": {
													"nativeSrc": "971:79:3",
													"nodeType": "YulBlock",
													"src": "971:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:3",
																"nodeType": "YulBlock",
																"src": "1028:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:3"
																			},
																			"nativeSrc": "1030:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:3"
																		},
																		"nativeSrc": "1030:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:3"
																				},
																				"nativeSrc": "1001:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:3"
																		},
																		"nativeSrc": "991:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:3"
																},
																"nativeSrc": "984:43:3",
																"nodeType": "YulFunctionCall",
																"src": "984:43:3"
															},
															"nativeSrc": "981:63:3",
															"nodeType": "YulIf",
															"src": "981:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:3",
														"nodeType": "YulTypedName",
														"src": "964:5:3",
														"type": ""
													}
												],
												"src": "928:122:3"
											},
											{
												"body": {
													"nativeSrc": "1119:80:3",
													"nodeType": "YulBlock",
													"src": "1119:80:3",
													"statements": [
														{
															"nativeSrc": "1129:22:3",
															"nodeType": "YulAssignment",
															"src": "1129:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:3"
																},
																"nativeSrc": "1138:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:3"
																},
																"nativeSrc": "1160:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:3"
															},
															"nativeSrc": "1160:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:3",
														"nodeType": "YulTypedName",
														"src": "1097:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:3",
														"nodeType": "YulTypedName",
														"src": "1105:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:3",
														"nodeType": "YulTypedName",
														"src": "1113:5:3",
														"type": ""
													}
												],
												"src": "1056:143:3"
											},
											{
												"body": {
													"nativeSrc": "1316:552:3",
													"nodeType": "YulBlock",
													"src": "1316:552:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:3",
																"nodeType": "YulBlock",
																"src": "1362:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:3"
																			},
																			"nativeSrc": "1364:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:3"
																		},
																		"nativeSrc": "1364:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:3"
																		},
																		"nativeSrc": "1333:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:3"
																},
																"nativeSrc": "1329:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:3"
															},
															"nativeSrc": "1326:119:3",
															"nodeType": "YulIf",
															"src": "1326:119:3"
														},
														{
															"nativeSrc": "1455:128:3",
															"nodeType": "YulBlock",
															"src": "1455:128:3",
															"statements": [
																{
																	"nativeSrc": "1470:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:3"
																				},
																				"nativeSrc": "1541:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:3"
																		},
																		"nativeSrc": "1509:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:3",
															"nodeType": "YulBlock",
															"src": "1593:129:3",
															"statements": [
																{
																	"nativeSrc": "1608:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:3"
																				},
																				"nativeSrc": "1680:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:3"
																		},
																		"nativeSrc": "1648:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:3",
															"nodeType": "YulBlock",
															"src": "1732:129:3",
															"statements": [
																{
																	"nativeSrc": "1747:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:3"
																				},
																				"nativeSrc": "1819:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:3"
																		},
																		"nativeSrc": "1787:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:3",
														"nodeType": "YulTypedName",
														"src": "1270:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:3",
														"nodeType": "YulTypedName",
														"src": "1281:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:3",
														"nodeType": "YulTypedName",
														"src": "1293:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:3",
														"nodeType": "YulTypedName",
														"src": "1301:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:3",
														"nodeType": "YulTypedName",
														"src": "1309:6:3",
														"type": ""
													}
												],
												"src": "1205:663:3"
											},
											{
												"body": {
													"nativeSrc": "1939:53:3",
													"nodeType": "YulBlock",
													"src": "1939:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:3"
																		},
																		"nativeSrc": "1961:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:3"
																},
																"nativeSrc": "1949:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:3"
															},
															"nativeSrc": "1949:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:3",
														"nodeType": "YulTypedName",
														"src": "1927:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:3",
														"nodeType": "YulTypedName",
														"src": "1934:3:3",
														"type": ""
													}
												],
												"src": "1874:118:3"
											},
											{
												"body": {
													"nativeSrc": "2096:124:3",
													"nodeType": "YulBlock",
													"src": "2096:124:3",
													"statements": [
														{
															"nativeSrc": "2106:26:3",
															"nodeType": "YulAssignment",
															"src": "2106:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:3"
																},
																"nativeSrc": "2114:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:3"
																		},
																		"nativeSrc": "2195:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:3"
																},
																"nativeSrc": "2142:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:3"
															},
															"nativeSrc": "2142:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:3",
														"nodeType": "YulTypedName",
														"src": "2068:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:3",
														"nodeType": "YulTypedName",
														"src": "2080:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:3",
														"nodeType": "YulTypedName",
														"src": "2091:4:3",
														"type": ""
													}
												],
												"src": "1998:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f86380380610f8683398181016040528101906100319190610253565b825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102b2565b60405180910390fd5b6100b18161010160201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050506102cb565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ef826101c6565b9050919050565b6101ff816101e5565b8114610209575f80fd5b50565b5f8151905061021a816101f6565b92915050565b5f819050919050565b61023281610220565b811461023c575f80fd5b50565b5f8151905061024d81610229565b92915050565b5f805f6060848603121561026a576102696101c2565b5b5f6102778682870161020c565b93505060206102888682870161020c565b92505060406102998682870161023f565b9150509250925092565b6102ac816101e5565b82525050565b5f6020820190506102c55f8301846102a3565b92915050565b610cae806102d85f395ff3fe608060405260043610610054575f3560e01c8063065de74c146100585780631998aeef14610080578063715018a61461008a5780638da5cb5b146100a0578063f2fde38b146100ca578063fe67a54b146100f2575b5f80fd5b348015610063575f80fd5b5061007e600480360381019061007991906109b8565b610108565b005b61008861019f565b005b348015610095575f80fd5b5061009e61047b565b005b3480156100ab575f80fd5b506100b461048e565b6040516100c19190610a22565b60405180910390f35b3480156100d5575f80fd5b506100f060048036038101906100eb9190610a65565b6104b5565b005b3480156100fd575f80fd5b50610106610539565b005b600354421115610144576040517f628e388300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600381905550806003546101599190610abd565b6004819055507ff8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c600354600454604051610194929190610aff565b60405180910390a150565b6004544211156101db576040517fd02e774d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006543411610223576006546040517f4e12c1bb00000000000000000000000000000000000000000000000000000000815260040161021a9190610b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a1575f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166006546040516102c190610b6c565b5f6040518083038185875af1925050503d805f81146102fb576040519150601f19603f3d011682016040523d82523d5f602084013e610300565b606091505b505090508061033b576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60075f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b33600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550346006819055503373ffffffffffffffffffffffffffffffffffffffff167ff4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300346040516104719190610b26565b60405180910390a2565b6104836106a2565b61048c5f610729565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104bd6106a2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361052d575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105249190610a22565b60405180910390fd5b61053681610729565b50565b6004544211610574576040517f44cee29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055f9054906101000a900460ff16156105ba576040517fd02e774d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004544210156105f6576040517f44cee29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6106026006546107ea565b90505f816006546106139190610b80565b905061061e8261080c565b610627816108d0565b7fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660065460405161067c929190610bb3565b60405180910390a1600160055f6101000a81548160ff0219169083151502179055505050565b6106aa61097a565b73ffffffffffffffffffffffffffffffffffffffff166106c861048e565b73ffffffffffffffffffffffffffffffffffffffff1614610727576106eb61097a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161071e9190610a22565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6064600254836107fb9190610bda565b6108059190610c48565b9050919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161085290610b6c565b5f6040518083038185875af1925050503d805f811461088c576040519150601f19603f3d011682016040523d82523d5f602084013e610891565b606091505b50509050806108cc576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f6108d961048e565b73ffffffffffffffffffffffffffffffffffffffff16826040516108fc90610b6c565b5f6040518083038185875af1925050503d805f8114610936576040519150601f19603f3d011682016040523d82523d5f602084013e61093b565b606091505b5050905080610976576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f33905090565b5f80fd5b5f819050919050565b61099781610985565b81146109a1575f80fd5b50565b5f813590506109b28161098e565b92915050565b5f602082840312156109cd576109cc610981565b5b5f6109da848285016109a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a0c826109e3565b9050919050565b610a1c81610a02565b82525050565b5f602082019050610a355f830184610a13565b92915050565b610a4481610a02565b8114610a4e575f80fd5b50565b5f81359050610a5f81610a3b565b92915050565b5f60208284031215610a7a57610a79610981565b5b5f610a8784828501610a51565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ac782610985565b9150610ad283610985565b9250828201905080821115610aea57610ae9610a90565b5b92915050565b610af981610985565b82525050565b5f604082019050610b125f830185610af0565b610b1f6020830184610af0565b9392505050565b5f602082019050610b395f830184610af0565b92915050565b5f81905092915050565b50565b5f610b575f83610b3f565b9150610b6282610b49565b5f82019050919050565b5f610b7682610b4c565b9150819050919050565b5f610b8a82610985565b9150610b9583610985565b9250828203905081811115610bad57610bac610a90565b5b92915050565b5f604082019050610bc65f830185610a13565b610bd36020830184610af0565b9392505050565b5f610be482610985565b9150610bef83610985565b9250828202610bfd81610985565b91508282048414831517610c1457610c13610a90565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c5282610985565b9150610c5d83610985565b925082610c6d57610c6c610c1b565b5b82820490509291505056fea26469706673582212206b2e29cf98dfd18c82fb262408cba3c424ad7f1eae6a704c875289b3ce5073af64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF86 CODESIZE SUB DUP1 PUSH2 0xF86 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x253 JUMP JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x101 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x2CB JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21A DUP2 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x220 JUMP JUMPDEST DUP2 EQ PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24D DUP2 PUSH2 0x229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x277 DUP7 DUP3 DUP8 ADD PUSH2 0x20C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x288 DUP7 DUP3 DUP8 ADD PUSH2 0x20C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x299 DUP7 DUP3 DUP8 ADD PUSH2 0x23F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAE DUP1 PUSH2 0x2D8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65DE74C EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x47B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x628E388300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xF8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0xD02E774D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE GT PUSH2 0x223 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x4E12C1BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A1 JUMPI PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x300 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF4757A49B326036464BEC6FE419A4AE38C8A02CE3E68BF0809674F6AAB8AD300 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x48C PUSH0 PUSH2 0x729 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BD PUSH2 0x6A2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x52D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x536 DUP2 PUSH2 0x729 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44CEE29000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD02E774D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44CEE29000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x602 PUSH1 0x6 SLOAD PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH2 0x61E DUP3 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x8D0 JUMP JUMPDEST PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x67C SWAP3 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x97A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C8 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x727 JUMPI PUSH2 0x6EB PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x805 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x852 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x891 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D9 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x93B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x997 DUP2 PUSH2 0x985 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B2 DUP2 PUSH2 0x98E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CC PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9DA DUP5 DUP3 DUP6 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA35 PUSH0 DUP4 ADD DUP5 PUSH2 0xA13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH2 0xA02 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA5F DUP2 PUSH2 0xA3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA87 DUP5 DUP3 DUP6 ADD PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAC7 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD2 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0xA90 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF9 DUP2 PUSH2 0x985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB12 PUSH0 DUP4 ADD DUP6 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xB1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB57 PUSH0 DUP4 PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP PUSH2 0xB62 DUP3 PUSH2 0xB49 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB76 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB8A DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xB95 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0xA90 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC6 PUSH0 DUP4 ADD DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xBD3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBE4 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xBEF DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBFD DUP2 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xA90 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5D DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC6D JUMPI PUSH2 0xC6C PUSH2 0xC1B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x2E29CF98DFD18C82FB262408 0xCB LOG3 0xC4 0x24 0xAD PUSH32 0x1EAE6A704C875289B3CE5073AF64736F6C634300081A00330000000000000000 ",
							"sourceMap": "98:2848:0:-:0;;;2747:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2841:13;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2880:11:0::1;2867:10;;:24;;;;;;;;;;;;;;;;;;2918:14;2902:13;:30;;;;2747:194:::0;;;98:2848;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;98:2848:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_389": {
									"entryPoint": 1698,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_464": {
									"entryPoint": 2426,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_451": {
									"entryPoint": 1833,
									"id": 451,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bid_164": {
									"entryPoint": 415,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateFee_179": {
									"entryPoint": 2026,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@endAuction_234": {
									"entryPoint": 1337,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_372": {
									"entryPoint": 1166,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_403": {
									"entryPoint": 1147,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAuction_85": {
									"entryPoint": 264,
									"id": 85,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferFee_256": {
									"entryPoint": 2060,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_431": {
									"entryPoint": 1205,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToOwner_282": {
									"entryPoint": 2256,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5682:3",
										"nodeType": "YulBlock",
										"src": "0:5682:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "597:87:3",
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nativeSrc": "607:29:3",
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nativeSrc": "616:20:3",
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nativeSrc": "645:33:3",
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nativeSrc": "645:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:3",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:3",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:3",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nativeSrc": "756:263:3",
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:3",
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nativeSrc": "804:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nativeSrc": "804:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nativeSrc": "773:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:3",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nativeSrc": "769:32:3",
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nativeSrc": "766:119:3",
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nativeSrc": "895:117:3",
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nativeSrc": "910:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:3",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:3",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:3",
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nativeSrc": "970:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nativeSrc": "949:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:3",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:3",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:3",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nativeSrc": "1070:81:3",
													"nodeType": "YulBlock",
													"src": "1070:81:3",
													"statements": [
														{
															"nativeSrc": "1080:65:3",
															"nodeType": "YulAssignment",
															"src": "1080:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:3"
																},
																"nativeSrc": "1091:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:3",
														"nodeType": "YulTypedName",
														"src": "1052:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:3",
														"nodeType": "YulTypedName",
														"src": "1062:7:3",
														"type": ""
													}
												],
												"src": "1025:126:3"
											},
											{
												"body": {
													"nativeSrc": "1202:51:3",
													"nodeType": "YulBlock",
													"src": "1202:51:3",
													"statements": [
														{
															"nativeSrc": "1212:35:3",
															"nodeType": "YulAssignment",
															"src": "1212:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:3"
																},
																"nativeSrc": "1223:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:3",
														"nodeType": "YulTypedName",
														"src": "1184:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:3",
														"nodeType": "YulTypedName",
														"src": "1194:7:3",
														"type": ""
													}
												],
												"src": "1157:96:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1654:79:3",
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:3",
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nativeSrc": "1713:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nativeSrc": "1713:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nativeSrc": "1684:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nativeSrc": "1674:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nativeSrc": "1667:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nativeSrc": "1664:63:3",
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:3",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nativeSrc": "1791:87:3",
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nativeSrc": "1801:29:3",
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nativeSrc": "1810:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nativeSrc": "1839:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nativeSrc": "1839:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:3",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:3",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:3",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nativeSrc": "1950:263:3",
													"nodeType": "YulBlock",
													"src": "1950:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:3",
																"nodeType": "YulBlock",
																"src": "1996:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:3"
																			},
																			"nativeSrc": "1998:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:3"
																		},
																		"nativeSrc": "1998:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:3"
																		},
																		"nativeSrc": "1967:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																},
																"nativeSrc": "1963:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:3"
															},
															"nativeSrc": "1960:119:3",
															"nodeType": "YulIf",
															"src": "1960:119:3"
														},
														{
															"nativeSrc": "2089:117:3",
															"nodeType": "YulBlock",
															"src": "2089:117:3",
															"statements": [
																{
																	"nativeSrc": "2104:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:3"
																				},
																				"nativeSrc": "2164:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2143:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:3"
																		},
																		"nativeSrc": "2143:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1884:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:3",
														"nodeType": "YulTypedName",
														"src": "1920:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:3",
														"nodeType": "YulTypedName",
														"src": "1931:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:3",
														"nodeType": "YulTypedName",
														"src": "1943:6:3",
														"type": ""
													}
												],
												"src": "1884:329:3"
											},
											{
												"body": {
													"nativeSrc": "2247:152:3",
													"nodeType": "YulBlock",
													"src": "2247:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2264:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2264:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2267:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2267:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2257:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:3"
																},
																"nativeSrc": "2257:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2257:88:3"
															},
															"nativeSrc": "2257:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2257:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2361:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2361:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2364:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2364:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2354:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2354:6:3"
																},
																"nativeSrc": "2354:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2354:15:3"
															},
															"nativeSrc": "2354:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2354:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2385:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2388:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2388:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2378:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:3"
																},
																"nativeSrc": "2378:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2378:15:3"
															},
															"nativeSrc": "2378:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2378:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2219:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:180:3"
											},
											{
												"body": {
													"nativeSrc": "2449:147:3",
													"nodeType": "YulBlock",
													"src": "2449:147:3",
													"statements": [
														{
															"nativeSrc": "2459:25:3",
															"nodeType": "YulAssignment",
															"src": "2459:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2482:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2482:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2464:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2464:17:3"
																},
																"nativeSrc": "2464:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2464:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2459:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2459:1:3"
																}
															]
														},
														{
															"nativeSrc": "2493:25:3",
															"nodeType": "YulAssignment",
															"src": "2493:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2516:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2516:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2498:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2498:17:3"
																},
																"nativeSrc": "2498:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2498:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2493:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2493:1:3"
																}
															]
														},
														{
															"nativeSrc": "2527:16:3",
															"nodeType": "YulAssignment",
															"src": "2527:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2538:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2538:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2541:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2541:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2534:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:3"
																},
																"nativeSrc": "2534:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2534:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2527:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2567:22:3",
																"nodeType": "YulBlock",
																"src": "2567:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2569:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2569:16:3"
																			},
																			"nativeSrc": "2569:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2569:18:3"
																		},
																		"nativeSrc": "2569:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2569:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2559:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2559:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2562:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2556:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2556:2:3"
																},
																"nativeSrc": "2556:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2556:10:3"
															},
															"nativeSrc": "2553:36:3",
															"nodeType": "YulIf",
															"src": "2553:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2405:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2436:1:3",
														"nodeType": "YulTypedName",
														"src": "2436:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2439:1:3",
														"nodeType": "YulTypedName",
														"src": "2439:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2445:3:3",
														"nodeType": "YulTypedName",
														"src": "2445:3:3",
														"type": ""
													}
												],
												"src": "2405:191:3"
											},
											{
												"body": {
													"nativeSrc": "2667:53:3",
													"nodeType": "YulBlock",
													"src": "2667:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2684:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2684:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2707:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2707:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2689:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2689:17:3"
																		},
																		"nativeSrc": "2689:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2689:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2677:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:3"
																},
																"nativeSrc": "2677:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2677:37:3"
															},
															"nativeSrc": "2677:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2677:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2602:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2655:5:3",
														"nodeType": "YulTypedName",
														"src": "2655:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2662:3:3",
														"nodeType": "YulTypedName",
														"src": "2662:3:3",
														"type": ""
													}
												],
												"src": "2602:118:3"
											},
											{
												"body": {
													"nativeSrc": "2852:206:3",
													"nodeType": "YulBlock",
													"src": "2852:206:3",
													"statements": [
														{
															"nativeSrc": "2862:26:3",
															"nodeType": "YulAssignment",
															"src": "2862:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2874:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2874:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2870:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:3"
																},
																"nativeSrc": "2870:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2942:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2942:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2955:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2955:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2966:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2966:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2951:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2951:3:3"
																		},
																		"nativeSrc": "2951:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2951:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2898:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2898:43:3"
																},
																"nativeSrc": "2898:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2898:71:3"
															},
															"nativeSrc": "2898:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2898:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3023:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3036:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3036:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3047:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3047:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3032:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:3"
																		},
																		"nativeSrc": "3032:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2979:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2979:43:3"
																},
																"nativeSrc": "2979:72:3",
																"nodeType": "YulFunctionCall",
																"src": "2979:72:3"
															},
															"nativeSrc": "2979:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "2979:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2726:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2816:9:3",
														"nodeType": "YulTypedName",
														"src": "2816:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2828:6:3",
														"nodeType": "YulTypedName",
														"src": "2828:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2836:6:3",
														"nodeType": "YulTypedName",
														"src": "2836:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:3",
														"nodeType": "YulTypedName",
														"src": "2847:4:3",
														"type": ""
													}
												],
												"src": "2726:332:3"
											},
											{
												"body": {
													"nativeSrc": "3162:124:3",
													"nodeType": "YulBlock",
													"src": "3162:124:3",
													"statements": [
														{
															"nativeSrc": "3172:26:3",
															"nodeType": "YulAssignment",
															"src": "3172:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3184:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3184:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3195:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3195:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3180:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3180:3:3"
																},
																"nativeSrc": "3180:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3180:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3172:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3172:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3252:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3252:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3276:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:3"
																		},
																		"nativeSrc": "3261:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3208:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3208:43:3"
																},
																"nativeSrc": "3208:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3208:71:3"
															},
															"nativeSrc": "3208:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3208:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3064:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3134:9:3",
														"nodeType": "YulTypedName",
														"src": "3134:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3146:6:3",
														"nodeType": "YulTypedName",
														"src": "3146:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3157:4:3",
														"nodeType": "YulTypedName",
														"src": "3157:4:3",
														"type": ""
													}
												],
												"src": "3064:222:3"
											},
											{
												"body": {
													"nativeSrc": "3405:34:3",
													"nodeType": "YulBlock",
													"src": "3405:34:3",
													"statements": [
														{
															"nativeSrc": "3415:18:3",
															"nodeType": "YulAssignment",
															"src": "3415:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "3430:3:3",
																"nodeType": "YulIdentifier",
																"src": "3430:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3415:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3415:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3292:147:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3377:3:3",
														"nodeType": "YulTypedName",
														"src": "3377:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3382:6:3",
														"nodeType": "YulTypedName",
														"src": "3382:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3393:11:3",
														"nodeType": "YulTypedName",
														"src": "3393:11:3",
														"type": ""
													}
												],
												"src": "3292:147:3"
											},
											{
												"body": {
													"nativeSrc": "3551:8:3",
													"nodeType": "YulBlock",
													"src": "3551:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "3445:114:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3543:6:3",
														"nodeType": "YulTypedName",
														"src": "3543:6:3",
														"type": ""
													}
												],
												"src": "3445:114:3"
											},
											{
												"body": {
													"nativeSrc": "3728:235:3",
													"nodeType": "YulBlock",
													"src": "3728:235:3",
													"statements": [
														{
															"nativeSrc": "3738:90:3",
															"nodeType": "YulAssignment",
															"src": "3738:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3821:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3826:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3826:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3745:75:3",
																	"nodeType": "YulIdentifier",
																	"src": "3745:75:3"
																},
																"nativeSrc": "3745:83:3",
																"nodeType": "YulFunctionCall",
																"src": "3745:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3738:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3926:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3926:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "3837:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3837:88:3"
																},
																"nativeSrc": "3837:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3837:93:3"
															},
															"nativeSrc": "3837:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3837:93:3"
														},
														{
															"nativeSrc": "3939:18:3",
															"nodeType": "YulAssignment",
															"src": "3939:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3950:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3950:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3946:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3946:3:3"
																},
																"nativeSrc": "3946:11:3",
																"nodeType": "YulFunctionCall",
																"src": "3946:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3939:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3939:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3565:398:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3716:3:3",
														"nodeType": "YulTypedName",
														"src": "3716:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3724:3:3",
														"nodeType": "YulTypedName",
														"src": "3724:3:3",
														"type": ""
													}
												],
												"src": "3565:398:3"
											},
											{
												"body": {
													"nativeSrc": "4157:191:3",
													"nodeType": "YulBlock",
													"src": "4157:191:3",
													"statements": [
														{
															"nativeSrc": "4168:154:3",
															"nodeType": "YulAssignment",
															"src": "4168:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4318:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4318:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4175:141:3",
																	"nodeType": "YulIdentifier",
																	"src": "4175:141:3"
																},
																"nativeSrc": "4175:147:3",
																"nodeType": "YulFunctionCall",
																"src": "4175:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4168:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4168:3:3"
																}
															]
														},
														{
															"nativeSrc": "4332:10:3",
															"nodeType": "YulAssignment",
															"src": "4332:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4339:3:3",
																"nodeType": "YulIdentifier",
																"src": "4339:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4332:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4332:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3969:379:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4144:3:3",
														"nodeType": "YulTypedName",
														"src": "4144:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4153:3:3",
														"nodeType": "YulTypedName",
														"src": "4153:3:3",
														"type": ""
													}
												],
												"src": "3969:379:3"
											},
											{
												"body": {
													"nativeSrc": "4399:149:3",
													"nodeType": "YulBlock",
													"src": "4399:149:3",
													"statements": [
														{
															"nativeSrc": "4409:25:3",
															"nodeType": "YulAssignment",
															"src": "4409:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4432:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4432:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4414:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4414:17:3"
																},
																"nativeSrc": "4414:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4414:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4409:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4409:1:3"
																}
															]
														},
														{
															"nativeSrc": "4443:25:3",
															"nodeType": "YulAssignment",
															"src": "4443:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4466:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4466:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4448:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4448:17:3"
																},
																"nativeSrc": "4448:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4448:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4443:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4443:1:3"
																}
															]
														},
														{
															"nativeSrc": "4477:17:3",
															"nodeType": "YulAssignment",
															"src": "4477:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4489:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4489:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4492:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4492:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4485:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:3"
																},
																"nativeSrc": "4485:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4485:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4477:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4477:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4519:22:3",
																"nodeType": "YulBlock",
																"src": "4519:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4521:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4521:16:3"
																			},
																			"nativeSrc": "4521:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4521:18:3"
																		},
																		"nativeSrc": "4521:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4521:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4510:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4510:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4516:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4516:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4507:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4507:2:3"
																},
																"nativeSrc": "4507:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4507:11:3"
															},
															"nativeSrc": "4504:37:3",
															"nodeType": "YulIf",
															"src": "4504:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4354:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4385:1:3",
														"nodeType": "YulTypedName",
														"src": "4385:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4388:1:3",
														"nodeType": "YulTypedName",
														"src": "4388:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4394:4:3",
														"nodeType": "YulTypedName",
														"src": "4394:4:3",
														"type": ""
													}
												],
												"src": "4354:194:3"
											},
											{
												"body": {
													"nativeSrc": "4680:206:3",
													"nodeType": "YulBlock",
													"src": "4680:206:3",
													"statements": [
														{
															"nativeSrc": "4690:26:3",
															"nodeType": "YulAssignment",
															"src": "4690:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4702:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4698:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:3"
																},
																"nativeSrc": "4698:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4698:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4690:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4690:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4770:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4770:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4783:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4794:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4794:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4779:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:3"
																		},
																		"nativeSrc": "4779:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4726:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4726:43:3"
																},
																"nativeSrc": "4726:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4726:71:3"
															},
															"nativeSrc": "4726:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4726:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4851:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4864:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4875:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:3"
																		},
																		"nativeSrc": "4860:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4807:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4807:43:3"
																},
																"nativeSrc": "4807:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4807:72:3"
															},
															"nativeSrc": "4807:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4807:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4554:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4644:9:3",
														"nodeType": "YulTypedName",
														"src": "4644:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4656:6:3",
														"nodeType": "YulTypedName",
														"src": "4656:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4664:6:3",
														"nodeType": "YulTypedName",
														"src": "4664:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4675:4:3",
														"nodeType": "YulTypedName",
														"src": "4675:4:3",
														"type": ""
													}
												],
												"src": "4554:332:3"
											},
											{
												"body": {
													"nativeSrc": "4940:362:3",
													"nodeType": "YulBlock",
													"src": "4940:362:3",
													"statements": [
														{
															"nativeSrc": "4950:25:3",
															"nodeType": "YulAssignment",
															"src": "4950:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4973:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4973:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4955:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4955:17:3"
																},
																"nativeSrc": "4955:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4955:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4950:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4950:1:3"
																}
															]
														},
														{
															"nativeSrc": "4984:25:3",
															"nodeType": "YulAssignment",
															"src": "4984:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5007:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5007:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4989:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4989:17:3"
																},
																"nativeSrc": "4989:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4989:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4984:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4984:1:3"
																}
															]
														},
														{
															"nativeSrc": "5018:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "5018:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5041:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5041:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5044:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5044:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5037:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:3"
																},
																"nativeSrc": "5037:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5037:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5022:11:3",
																	"nodeType": "YulTypedName",
																	"src": "5022:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5055:41:3",
															"nodeType": "YulAssignment",
															"src": "5055:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5084:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "5084:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5066:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5066:17:3"
																},
																"nativeSrc": "5066:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5066:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5055:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "5055:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5273:22:3",
																"nodeType": "YulBlock",
																"src": "5273:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5275:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5275:16:3"
																			},
																			"nativeSrc": "5275:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5275:18:3"
																		},
																		"nativeSrc": "5275:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5275:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5206:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "5206:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5199:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "5199:6:3"
																				},
																				"nativeSrc": "5199:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5199:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5229:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "5229:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5236:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "5236:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5245:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "5245:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5232:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5232:3:3"
																						},
																						"nativeSrc": "5232:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5232:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5226:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "5226:2:3"
																				},
																				"nativeSrc": "5226:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5226:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5179:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "5179:2:3"
																		},
																		"nativeSrc": "5179:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5179:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5159:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5159:6:3"
																},
																"nativeSrc": "5159:113:3",
																"nodeType": "YulFunctionCall",
																"src": "5159:113:3"
															},
															"nativeSrc": "5156:139:3",
															"nodeType": "YulIf",
															"src": "5156:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4892:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4923:1:3",
														"nodeType": "YulTypedName",
														"src": "4923:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4926:1:3",
														"nodeType": "YulTypedName",
														"src": "4926:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4932:7:3",
														"nodeType": "YulTypedName",
														"src": "4932:7:3",
														"type": ""
													}
												],
												"src": "4892:410:3"
											},
											{
												"body": {
													"nativeSrc": "5336:152:3",
													"nodeType": "YulBlock",
													"src": "5336:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5353:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5353:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5356:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5356:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:3"
																},
																"nativeSrc": "5346:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5346:88:3"
															},
															"nativeSrc": "5346:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5346:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5450:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5450:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5453:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5453:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5443:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5443:6:3"
																},
																"nativeSrc": "5443:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5443:15:3"
															},
															"nativeSrc": "5443:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5443:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5474:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5474:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5477:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5477:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5467:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5467:6:3"
																},
																"nativeSrc": "5467:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5467:15:3"
															},
															"nativeSrc": "5467:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5467:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5308:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5308:180:3"
											},
											{
												"body": {
													"nativeSrc": "5536:143:3",
													"nodeType": "YulBlock",
													"src": "5536:143:3",
													"statements": [
														{
															"nativeSrc": "5546:25:3",
															"nodeType": "YulAssignment",
															"src": "5546:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5569:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5569:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5551:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5551:17:3"
																},
																"nativeSrc": "5551:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5551:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5546:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5546:1:3"
																}
															]
														},
														{
															"nativeSrc": "5580:25:3",
															"nodeType": "YulAssignment",
															"src": "5580:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5603:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5603:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5585:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5585:17:3"
																},
																"nativeSrc": "5585:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5585:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5580:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5580:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5627:22:3",
																"nodeType": "YulBlock",
																"src": "5627:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5629:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5629:16:3"
																			},
																			"nativeSrc": "5629:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:18:3"
																		},
																		"nativeSrc": "5629:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5624:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5624:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5617:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:3"
																},
																"nativeSrc": "5617:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5617:9:3"
															},
															"nativeSrc": "5614:35:3",
															"nodeType": "YulIf",
															"src": "5614:35:3"
														},
														{
															"nativeSrc": "5659:14:3",
															"nodeType": "YulAssignment",
															"src": "5659:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5668:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5671:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5671:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5664:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5664:3:3"
																},
																"nativeSrc": "5664:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5664:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5659:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5659:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5494:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5525:1:3",
														"nodeType": "YulTypedName",
														"src": "5525:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5528:1:3",
														"nodeType": "YulTypedName",
														"src": "5528:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5534:1:3",
														"nodeType": "YulTypedName",
														"src": "5534:1:3",
														"type": ""
													}
												],
												"src": "5494:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610054575f3560e01c8063065de74c146100585780631998aeef14610080578063715018a61461008a5780638da5cb5b146100a0578063f2fde38b146100ca578063fe67a54b146100f2575b5f80fd5b348015610063575f80fd5b5061007e600480360381019061007991906109b8565b610108565b005b61008861019f565b005b348015610095575f80fd5b5061009e61047b565b005b3480156100ab575f80fd5b506100b461048e565b6040516100c19190610a22565b60405180910390f35b3480156100d5575f80fd5b506100f060048036038101906100eb9190610a65565b6104b5565b005b3480156100fd575f80fd5b50610106610539565b005b600354421115610144576040517f628e388300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600381905550806003546101599190610abd565b6004819055507ff8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c600354600454604051610194929190610aff565b60405180910390a150565b6004544211156101db576040517fd02e774d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006543411610223576006546040517f4e12c1bb00000000000000000000000000000000000000000000000000000000815260040161021a9190610b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a1575f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166006546040516102c190610b6c565b5f6040518083038185875af1925050503d805f81146102fb576040519150601f19603f3d011682016040523d82523d5f602084013e610300565b606091505b505090508061033b576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60075f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b33600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550346006819055503373ffffffffffffffffffffffffffffffffffffffff167ff4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300346040516104719190610b26565b60405180910390a2565b6104836106a2565b61048c5f610729565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104bd6106a2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361052d575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105249190610a22565b60405180910390fd5b61053681610729565b50565b6004544211610574576040517f44cee29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055f9054906101000a900460ff16156105ba576040517fd02e774d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004544210156105f6576040517f44cee29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6106026006546107ea565b90505f816006546106139190610b80565b905061061e8261080c565b610627816108d0565b7fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660065460405161067c929190610bb3565b60405180910390a1600160055f6101000a81548160ff0219169083151502179055505050565b6106aa61097a565b73ffffffffffffffffffffffffffffffffffffffff166106c861048e565b73ffffffffffffffffffffffffffffffffffffffff1614610727576106eb61097a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161071e9190610a22565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6064600254836107fb9190610bda565b6108059190610c48565b9050919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161085290610b6c565b5f6040518083038185875af1925050503d805f811461088c576040519150601f19603f3d011682016040523d82523d5f602084013e610891565b606091505b50509050806108cc576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f6108d961048e565b73ffffffffffffffffffffffffffffffffffffffff16826040516108fc90610b6c565b5f6040518083038185875af1925050503d805f8114610936576040519150601f19603f3d011682016040523d82523d5f602084013e61093b565b606091505b5050905080610976576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f33905090565b5f80fd5b5f819050919050565b61099781610985565b81146109a1575f80fd5b50565b5f813590506109b28161098e565b92915050565b5f602082840312156109cd576109cc610981565b5b5f6109da848285016109a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a0c826109e3565b9050919050565b610a1c81610a02565b82525050565b5f602082019050610a355f830184610a13565b92915050565b610a4481610a02565b8114610a4e575f80fd5b50565b5f81359050610a5f81610a3b565b92915050565b5f60208284031215610a7a57610a79610981565b5b5f610a8784828501610a51565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ac782610985565b9150610ad283610985565b9250828201905080821115610aea57610ae9610a90565b5b92915050565b610af981610985565b82525050565b5f604082019050610b125f830185610af0565b610b1f6020830184610af0565b9392505050565b5f602082019050610b395f830184610af0565b92915050565b5f81905092915050565b50565b5f610b575f83610b3f565b9150610b6282610b49565b5f82019050919050565b5f610b7682610b4c565b9150819050919050565b5f610b8a82610985565b9150610b9583610985565b9250828203905081811115610bad57610bac610a90565b5b92915050565b5f604082019050610bc65f830185610a13565b610bd36020830184610af0565b9392505050565b5f610be482610985565b9150610bef83610985565b9250828202610bfd81610985565b91508282048414831517610c1457610c13610a90565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c5282610985565b9150610c5d83610985565b925082610c6d57610c6c610c1b565b5b82820490509291505056fea26469706673582212206b2e29cf98dfd18c82fb262408cba3c424ad7f1eae6a704c875289b3ce5073af64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65DE74C EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x47B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x628E388300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xF8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0xD02E774D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE GT PUSH2 0x223 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x4E12C1BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A1 JUMPI PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x300 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF4757A49B326036464BEC6FE419A4AE38C8A02CE3E68BF0809674F6AAB8AD300 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x48C PUSH0 PUSH2 0x729 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BD PUSH2 0x6A2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x52D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x536 DUP2 PUSH2 0x729 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44CEE29000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD02E774D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44CEE29000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x602 PUSH1 0x6 SLOAD PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH2 0x61E DUP3 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x8D0 JUMP JUMPDEST PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x67C SWAP3 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x97A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C8 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x727 JUMPI PUSH2 0x6EB PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x805 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x852 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x891 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D9 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x93B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x997 DUP2 PUSH2 0x985 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B2 DUP2 PUSH2 0x98E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CC PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9DA DUP5 DUP3 DUP6 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA35 PUSH0 DUP4 ADD DUP5 PUSH2 0xA13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH2 0xA02 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA5F DUP2 PUSH2 0xA3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA87 DUP5 DUP3 DUP6 ADD PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAC7 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD2 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0xA90 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF9 DUP2 PUSH2 0x985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB12 PUSH0 DUP4 ADD DUP6 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xB1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB57 PUSH0 DUP4 PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP PUSH2 0xB62 DUP3 PUSH2 0xB49 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB76 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB8A DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xB95 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0xA90 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC6 PUSH0 DUP4 ADD DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xBD3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBE4 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xBEF DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBFD DUP2 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xA90 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5D DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC6D JUMPI PUSH2 0xC6C PUSH2 0xC1B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x2E29CF98DFD18C82FB262408 0xCB LOG3 0xC4 0x24 0xAD PUSH32 0x1EAE6A704C875289B3CE5073AF64736F6C634300081A00330000000000000000 ",
							"sourceMap": "98:2848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:268;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1029:662;;;:::i;:::-;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1839:496:0;;;;;;;;;;;;;:::i;:::-;;753:268;839:9;;821:15;:27;817:63;;;857:23;;;;;;;;;;;;;;817:63;903:15;891:9;:27;;;;951:12;939:9;;:24;;;;:::i;:::-;929:7;:34;;;;979;994:9;;1005:7;;979:34;;;;;;;:::i;:::-;;;;;;;;753:268;:::o;1029:662::-;1094:7;;1076:15;:25;1072:62;;;1113:21;;;;;;;;;;;;;;1072:62;1161:10;;1148:9;:23;1145:63;;1197:10;;1180:28;;;;;;;;;;;:::i;:::-;;;;;;;;1145:63;1250:1;1225:27;;:13;;;;;;;;;;;:27;;;1221:285;;1270:12;1296:13;;;;;;;;;;;1288:27;;1323:10;;1288:82;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:101;;;1390:7;1385:72;;1425:16;;;;;;;;;;;;;;1385:72;1493:1;1471:4;:19;1476:13;;;;;;;;;;;1471:19;;;;;;;;;;;;;;;:23;;;;1254:252;1221:285;1534:10;1518:13;;:26;;;;;;;;;;;;;;;;;;1576:9;1557:4;:16;1562:10;1557:16;;;;;;;;;;;;;;;:28;;;;1609:9;1596:10;:22;;;;1654:10;1634:42;;;1666:9;1634:42;;;;;;:::i;:::-;;;;;;;;1029:662::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1839:496:0:-;1904:7;;1885:15;:26;1881:86;;1935:20;;;;;;;;;;;;;;1881:86;1981:5;;;;;;;;;;;1977:42;;;1998:21;;;;;;;;;;;;;;1977:42;2052:7;;2034:15;:25;2030:61;;;2071:20;;;;;;;;;;;;;;2030:61;2104:11;2118:24;2131:10;;2118:12;:24::i;:::-;2104:38;;2153:14;2183:3;2170:10;;:16;;;;:::i;:::-;2153:33;;2197:16;2209:3;2197:11;:16::i;:::-;2224:23;2240:6;2224:15;:23::i;:::-;2265:39;2278:13;;;;;;;;;;;2293:10;;2265:39;;;;;;;:::i;:::-;;;;;;;;2323:4;2315:5;;:12;;;;;;;;;;;;;;;;;;1870:465;;1839:496::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1699:126:0:-;1760:7;1814:3;1797:13;;1788:6;:22;;;;:::i;:::-;1787:30;;;;:::i;:::-;1780:37;;1699:126;;;:::o;2343:186::-;2398:12;2416:10;;;;;;;;;;;:15;;2439:3;2416:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2397:50;;;2463:7;2458:64;;2494:16;;;;;;;;;;;;;;2458:64;2386:143;2343:186;:::o;2537:202::-;2599:12;2625:7;:5;:7::i;:::-;2617:21;;2646:6;2617:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:59;;;2673:7;2668:64;;2704:16;;;;;;;;;;;;;;2668:64;2587:152;2537:202;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:180::-;2267:77;2264:1;2257:88;2364:4;2361:1;2354:15;2388:4;2385:1;2378:15;2405:191;2445:3;2464:20;2482:1;2464:20;:::i;:::-;2459:25;;2498:20;2516:1;2498:20;:::i;:::-;2493:25;;2541:1;2538;2534:9;2527:16;;2562:3;2559:1;2556:10;2553:36;;;2569:18;;:::i;:::-;2553:36;2405:191;;;;:::o;2602:118::-;2689:24;2707:5;2689:24;:::i;:::-;2684:3;2677:37;2602:118;;:::o;2726:332::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2898:71;2966:1;2955:9;2951:17;2942:6;2898:71;:::i;:::-;2979:72;3047:2;3036:9;3032:18;3023:6;2979:72;:::i;:::-;2726:332;;;;;:::o;3064:222::-;3157:4;3195:2;3184:9;3180:18;3172:26;;3208:71;3276:1;3265:9;3261:17;3252:6;3208:71;:::i;:::-;3064:222;;;;:::o;3292:147::-;3393:11;3430:3;3415:18;;3292:147;;;;:::o;3445:114::-;;:::o;3565:398::-;3724:3;3745:83;3826:1;3821:3;3745:83;:::i;:::-;3738:90;;3837:93;3926:3;3837:93;:::i;:::-;3955:1;3950:3;3946:11;3939:18;;3565:398;;;:::o;3969:379::-;4153:3;4175:147;4318:3;4175:147;:::i;:::-;4168:154;;4339:3;4332:10;;3969:379;;;:::o;4354:194::-;4394:4;4414:20;4432:1;4414:20;:::i;:::-;4409:25;;4448:20;4466:1;4448:20;:::i;:::-;4443:25;;4492:1;4489;4485:9;4477:17;;4516:1;4510:4;4507:11;4504:37;;;4521:18;;:::i;:::-;4504:37;4354:194;;;;:::o;4554:332::-;4675:4;4713:2;4702:9;4698:18;4690:26;;4726:71;4794:1;4783:9;4779:17;4770:6;4726:71;:::i;:::-;4807:72;4875:2;4864:9;4860:18;4851:6;4807:72;:::i;:::-;4554:332;;;;;:::o;4892:410::-;4932:7;4955:20;4973:1;4955:20;:::i;:::-;4950:25;;4989:20;5007:1;4989:20;:::i;:::-;4984:25;;5044:1;5041;5037:9;5066:30;5084:11;5066:30;:::i;:::-;5055:41;;5245:1;5236:7;5232:15;5229:1;5226:22;5206:1;5199:9;5179:83;5156:139;;5275:18;;:::i;:::-;5156:139;4940:362;4892:410;;;;:::o;5308:180::-;5356:77;5353:1;5346:88;5453:4;5450:1;5443:15;5477:4;5474:1;5467:15;5494:185;5534:1;5551:20;5569:1;5551:20;:::i;:::-;5546:25;;5585:20;5603:1;5585:20;:::i;:::-;5580:25;;5624:1;5614:35;;5629:18;;:::i;:::-;5614:35;5671:1;5668;5664:9;5659:14;;5494:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "649200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bid()": "infinite",
								"endAuction()": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"startAuction(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"calculateFee(uint256)": "infinite",
								"transferFee(uint256)": "infinite",
								"transferToOwner(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2747,
									"end": 2941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2841,
									"end": 2854,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2880,
									"end": 2891,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2867,
									"end": 2877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2867,
									"end": 2891,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2918,
									"end": 2932,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2902,
									"end": 2915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2902,
									"end": 2932,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2902,
									"end": 2932,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2902,
									"end": 2932,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2902,
									"end": 2932,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 2946,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b2e29cf98dfd18c82fb262408cba3c424ad7f1eae6a704c875289b3ce5073af64736f6c634300081a0033",
									".code": [
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "65DE74C"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "1998AEEF"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "FE67A54B"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 2946,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 753,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1029,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1839,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 839,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 836,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 817,
											"end": 880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "628E388300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 857,
											"end": 880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 880,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 817,
											"end": 880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 918,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 891,
											"end": 918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 891,
											"end": 918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 891,
											"end": 918,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 891,
											"end": 918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 939,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 939,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 939,
											"end": 963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 939,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 939,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 939,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 939,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 939,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 929,
											"end": 963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "F8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C"
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 979,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1013,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 1021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1029,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1101,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1072,
											"end": 1134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "D02E774D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1134,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1072,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1171,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1145,
											"end": 1208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1197,
											"end": 1207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4E12C1BB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1180,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1145,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1221,
											"end": 1506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1288,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1385,
											"end": 1457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1457,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1385,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1221,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1544,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1561,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "F4757A49B326036464BEC6FE419A4AE38C8A02CE3E68BF0809674F6AAB8AD300"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1634,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1676,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1839,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1900,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1911,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1881,
											"end": 1967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "44CEE29000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1967,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1881,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "D02E774D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2049,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2030,
											"end": 2091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "44CEE29000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2091,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2030,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2131,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2131,
											"end": 2141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2118,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2118,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2170,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2170,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2197,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2224,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "DAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2265,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2304,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1825,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1699,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1797,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1797,
											"end": 1810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1788,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1787,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2529,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2343,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2398,
											"end": 2410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2416,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2458,
											"end": 2522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2522,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2458,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2739,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2537,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2617,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2668,
											"end": 2732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2732,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2668,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2219,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2345,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2368,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2354,
											"end": 2369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2482,
											"end": 2483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2464,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2464,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2498,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2498,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2566,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2553,
											"end": 2589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2569,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2589,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2553,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2720,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2602,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2707,
											"end": 2712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2689,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2898,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2979,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3208,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3559,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3445,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3565,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3745,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3828,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3745,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3926,
											"end": 3929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3837,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3930,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3837,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 3957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 3957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 3957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4348,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3969,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4175,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4322,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4175,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4168,
											"end": 4322,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4168,
											"end": 4322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4394,
											"end": 4398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4414,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4448,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4466,
											"end": 4467,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4448,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4448,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4448,
											"end": 4468,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4448,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4468,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4507,
											"end": 4518,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4521,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4792,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4726,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4875,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4807,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 4939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4973,
											"end": 4974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4955,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4975,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4955,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5007,
											"end": 5008,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4989,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5009,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5046,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5084,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5066,
											"end": 5096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5096,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5066,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5096,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5247,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5262,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5156,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5156,
											"end": 5295,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5275,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5156,
											"end": 5295,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5156,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 5302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 5302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5488,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5308,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5433,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5353,
											"end": 5354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5434,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5482,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5551,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5571,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5551,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5585,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5605,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5585,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5614,
											"end": 5649,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5629,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5649,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5614,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"2day/Auction.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bid()": "1998aeef",
							"endAuction()": "fe67a54b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startAuction(uint256)": "065de74c",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AuctionAlreadyEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionNotYetEnded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"}],\"name\":\"BidNotHighEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBidToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HighestBidIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_biddingTime\",\"type\":\"uint256\"}],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"2day/Auction.sol\":\"Auction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"2day/Auction.sol\":{\"keccak256\":\"0xdb1842cc4ee015bdbeffb2036b76a6e4c2f9a4c10921152f30e8b6ef573ef6f8\",\"urls\":[\"bzz-raw://9c1ed41101c654693d65d4bde9b6bc1123a6115686eba4a9422303cc081dee2d\",\"dweb:/ipfs/QmQwDnGg7T1MJtfqSThcweniT5mEEvwwLhkq9iEutS5G14\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "2day/Auction.sol:Auction",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "2day/Auction.sol:Auction",
								"label": "feeAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "2day/Auction.sol:Auction",
								"label": "feePercentage",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "2day/Auction.sol:Auction",
								"label": "startTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "2day/Auction.sol:Auction",
								"label": "endTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "2day/Auction.sol:Auction",
								"label": "ended",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 17,
								"contract": "2day/Auction.sol:Auction",
								"label": "highestBidder",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "2day/Auction.sol:Auction",
								"label": "highestBid",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "2day/Auction.sol:Auction",
								"label": "bids",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> 2day/Auction.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "2day/Auction.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"2day/Auction.sol": {
				"ast": {
					"absolutePath": "2day/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							304
						],
						"Ownable": [
							452
						]
					},
					"id": 305,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 305,
							"sourceUnit": 453,
							"src": "27:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 452,
										"src": "35:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Ownable",
										"nameLocations": [
											"118:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 452,
										"src": "118:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "118:7:0"
								}
							],
							"canonicalName": "Auction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304,
								452,
								482
							],
							"name": "Auction",
							"nameLocation": "107:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "feeAddress",
									"nameLocation": "140:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "132:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "132:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "feePercentage",
									"nameLocation": "165:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "157:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "157:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "193:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "185:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "185:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "217:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "209:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "ended",
									"nameLocation": "236:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "231:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 14,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "231:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "highestBidder",
									"nameLocation": "256:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "248:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "highestBid",
									"nameLocation": "284:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "276:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "276:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "bids",
									"nameLocation": "329:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "301:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "309:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "301:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "d02e774d",
									"id": 25,
									"name": "AuctionAlreadyEnded",
									"nameLocation": "352:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:0"
									},
									"src": "346:28:0"
								},
								{
									"errorSelector": "44cee290",
									"id": 27,
									"name": "AuctionNotYetEnded",
									"nameLocation": "386:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:0"
									},
									"src": "380:27:0"
								},
								{
									"errorSelector": "4e12c1bb",
									"id": 31,
									"name": "BidNotHighEnough",
									"nameLocation": "419:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "highestBid",
												"nameLocation": "444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "436:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:20:0"
									},
									"src": "413:43:0"
								},
								{
									"errorSelector": "628e3883",
									"id": 33,
									"name": "AuctionAlreadyStarted",
									"nameLocation": "468:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:2:0"
									},
									"src": "462:30:0"
								},
								{
									"errorSelector": "c9cd5804",
									"id": 35,
									"name": "NoBidToWithdraw",
									"nameLocation": "504:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:2:0"
									},
									"src": "498:24:0"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 37,
									"name": "TransferFailed",
									"nameLocation": "534:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:2:0"
									},
									"src": "528:23:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c",
									"id": 43,
									"name": "AuctionStarted",
									"nameLocation": "565:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:36:0"
									},
									"src": "559:57:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300",
									"id": 49,
									"name": "HighestBidIncreased",
									"nameLocation": "628:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "bidder",
												"nameLocation": "664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "648:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "680:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:40:0"
									},
									"src": "622:66:0"
								},
								{
									"anonymous": false,
									"eventSelector": "daec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda",
									"id": 55,
									"name": "AuctionEnded",
									"nameLocation": "700:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "721:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "713:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "737:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "729:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:32:0"
									},
									"src": "694:51:0"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "806:215:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 60,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "821:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "827:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "821:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 62,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "839:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "821:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "817:63:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 64,
															"name": "AuctionAlreadyStarted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "857:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "857:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 66,
													"nodeType": "RevertStatement",
													"src": "850:30:0"
												}
											},
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "891:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 69,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "909:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "903:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "891:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "891:27:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 74,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "939:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 75,
															"name": "_biddingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "951:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "939:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "929:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "929:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 80,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "994:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 81,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 79,
														"name": "AuctionStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "979:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "EmitStatement",
												"src": "974:39:0"
											}
										]
									},
									"functionSelector": "065de74c",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startAuction",
									"nameLocation": "762:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_biddingTime",
												"nameLocation": "783:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "775:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:22:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:0"
									},
									"scope": 304,
									"src": "753:268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1061:630:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 88,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1082:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1076:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 90,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1076:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1072:62:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 92,
															"name": "AuctionAlreadyEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1113:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1113:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 94,
													"nodeType": "RevertStatement",
													"src": "1106:28:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 96,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1152:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1148:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 98,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1161:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1148:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 104,
												"nodeType": "IfStatement",
												"src": "1145:63:0",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 101,
																"name": "highestBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 100,
															"name": "BidNotHighEnough",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1180:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1180:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 103,
													"nodeType": "RevertStatement",
													"src": "1173:35:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 105,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1225:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1250:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 106,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1242:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1242:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1225:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "1221:285:0",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "1254:252:0",
													"statements": [
														{
															"assignments": [
																112,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 112,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1275:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 136,
																	"src": "1270:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 111,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1270:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 122,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1353:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 115,
																					"name": "highestBidder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 17,
																					"src": "1296:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1288:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 113,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1288:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1288:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1311:4:0",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "1288:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 118,
																			"name": "highestBid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "1323:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1288:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:82:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1269:101:0"
														},
														{
															"condition": {
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1389:8:0",
																"subExpression": {
																	"id": 123,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "1390:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 129,
															"nodeType": "IfStatement",
															"src": "1385:72:0",
															"trueBody": {
																"id": 128,
																"nodeType": "Block",
																"src": "1399:58:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 125,
																				"name": "TransferFailed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "1425:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1425:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 127,
																		"nodeType": "RevertStatement",
																		"src": "1418:23:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 130,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1471:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 132,
																	"indexExpression": {
																		"id": 131,
																		"name": "highestBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1476:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1471:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1493:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1471:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 135,
															"nodeType": "ExpressionStatement",
															"src": "1471:23:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1518:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 139,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1534:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1538:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1534:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1518:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1518:26:0"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 143,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1557:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 146,
														"indexExpression": {
															"expression": {
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1562:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1566:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1557:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 147,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1576:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1580:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1557:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1557:28:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1596:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 152,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1609:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1613:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1609:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1596:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1596:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1658:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1666:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1670:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1666:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "HighestBidIncreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1634:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "EmitStatement",
												"src": "1629:47:0"
											}
										]
									},
									"functionSelector": "1998aeef",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nameLocation": "1038:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:0:0"
									},
									"scope": 304,
									"src": "1029:662:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1769:56:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 171,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "1788:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 172,
																	"name": "feePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1797:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1788:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1787:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1814:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1787:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 177,
												"nodeType": "Return",
												"src": "1780:37:0"
											}
										]
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFee",
									"nameLocation": "1708:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1721:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:16:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:9:0"
									},
									"scope": 304,
									"src": "1699:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1870:465:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 182,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1891:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1885:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 184,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1885:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "IfStatement",
												"src": "1881:86:0",
												"trueBody": {
													"id": 189,
													"nodeType": "Block",
													"src": "1913:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 186,
																	"name": "AuctionNotYetEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "1935:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1935:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 188,
															"nodeType": "RevertStatement",
															"src": "1928:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 191,
													"name": "ended",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "1981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 195,
												"nodeType": "IfStatement",
												"src": "1977:42:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 192,
															"name": "AuctionAlreadyEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1998:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1998:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 194,
													"nodeType": "RevertStatement",
													"src": "1991:28:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 196,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2040:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2034:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 198,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2034:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "2030:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 200,
															"name": "AuctionNotYetEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2071:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2071:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 202,
													"nodeType": "RevertStatement",
													"src": "2064:27:0"
												}
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2112:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2104:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 209,
												"initialValue": {
													"arguments": [
														{
															"id": 207,
															"name": "highestBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2131:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 206,
														"name": "calculateFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2118:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2118:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2104:38:0"
											},
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2161:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2153:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 215,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 212,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2170:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 213,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2183:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2170:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 217,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2209:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 216,
														"name": "transferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2197:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2197:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "2240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "transferToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2224:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2224:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 225,
															"name": "highestBidder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2278:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "highestBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2293:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 224,
														"name": "AuctionEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2265:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "2260:44:0"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "ended",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2323:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2315:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2315:12:0"
											}
										]
									},
									"functionSelector": "fe67a54b",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endAuction",
									"nameLocation": "1848:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1858:2:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:0:0"
									},
									"scope": 304,
									"src": "1839:496:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2386:143:0",
										"statements": [
											{
												"assignments": [
													240,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2403:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "2398:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2398:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 247,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2444:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 241,
																"name": "feeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "2416:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2427:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2416:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 243,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2439:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2416:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2397:50:0"
											},
											{
												"condition": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2462:8:0",
													"subExpression": {
														"id": 248,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "2458:64:0",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "2472:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 250,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "2494:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2494:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 252,
															"nodeType": "RevertStatement",
															"src": "2487:23:0"
														}
													]
												}
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFee",
									"nameLocation": "2352:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2372:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2364:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:13:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:0"
									},
									"scope": 304,
									"src": "2343:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2587:152:0",
										"statements": [
											{
												"assignments": [
													262,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2604:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2599:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 261,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 273,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 265,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "2625:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2625:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2617:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 263,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2617:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2617:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2634:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2617:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 269,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2646:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2617:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2598:59:0"
											},
											{
												"condition": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2672:8:0",
													"subExpression": {
														"id": 274,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"nodeType": "IfStatement",
												"src": "2668:64:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "2682:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 276,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "2704:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2704:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 278,
															"nodeType": "RevertStatement",
															"src": "2697:23:0"
														}
													]
												}
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToOwner",
									"nameLocation": "2546:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2570:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2562:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:16:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2587:0:0"
									},
									"scope": 304,
									"src": "2537:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "2856:85:0",
										"statements": [
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 294,
														"name": "feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 295,
														"name": "_feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2880:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2867:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "2867:24:0"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2902:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "2918:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2902:30:0"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 291,
													"name": "_ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 284,
													"src": "2841:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 292,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 290,
												"name": "Ownable",
												"nameLocations": [
													"2833:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 452,
												"src": "2833:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2833:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_ownerAddress",
												"nameLocation": "2767:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2759:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "2790:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2782:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "_feePercentage",
												"nameLocation": "2811:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2803:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:68:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2856:0:0"
									},
									"scope": 304,
									"src": "2747:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 305,
							"src": "98:2848:0",
							"usedErrors": [
								25,
								27,
								31,
								33,
								35,
								37,
								318,
								323
							],
							"usedEvents": [
								43,
								49,
								55,
								329
							]
						}
					],
					"src": "0:2946:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							482
						],
						"Ownable": [
							452
						]
					},
					"id": 453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 483,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 307,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 482,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 310,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 482,
										"src": "692:7:1"
									},
									"id": 311,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 452,
							"linearizedBaseContracts": [
								452,
								482
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 452,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 312,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 318,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 323,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 329,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 336,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 342,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 341,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 347,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 355,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 452,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 361,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 363,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 452,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 378,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 382,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 381,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 385,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 452,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 395,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 392,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 452,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 411,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 412,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 418,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 417,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 423,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 426,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 409,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 408,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 452,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 437,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"id": 439,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 442,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 446,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 445,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 452,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 453,
							"src": "663:2438:1",
							"usedErrors": [
								318,
								323
							],
							"usedEvents": [
								329
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 482,
							"linearizedBaseContracts": [
								482
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 460,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 459,
												"id": 462,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 482,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 468,
												"id": 471,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 482,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 477,
												"id": 479,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 482,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 483,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			}
		}
	}
}